<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0072)https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta http-equiv="Content-Style-Type" content="text/css">
  <meta name="generator" content="pandoc">
  <title></title>
  <style type="text/css">code{white-space: pre;}</style>
  <style type="text/css">
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
  </style>
  <link rel="stylesheet" href="./pmag201305_files/pmag.css" type="text/css">
<style type="text/css" id="diigolet-chrome-css">body#dummybodyid .diigolet,body#dummybodyid .diigolet a,body#dummybodyid .diigolet em,body#dummybodyid .diigolet span,body#dummybodyid .diigolet div,body#dummybodyid .diigolet dl,body#dummybodyid .diigolet dt,body#dummybodyid .diigolet dd,body#dummybodyid .diigolet ul,body#dummybodyid .diigolet ol,body#dummybodyid .diigolet li,body#dummybodyid .diigolet h1,body#dummybodyid .diigolet h2,body#dummybodyid .diigolet h3,body#dummybodyid .diigolet h4,body#dummybodyid .diigolet h5,body#dummybodyid .diigolet h6,body#dummybodyid .diigolet pre,body#dummybodyid .diigolet form,body#dummybodyid .diigolet fieldset,body#dummybodyid .diigolet p,body#dummybodyid .diigolet blockquote,body#dummybodyid .diigolet th,body#dummybodyid .diigolet td,body#dummybodyid .diigolet input,body#dummybodyid .diigolet textarea,body#dummybodyid .diigolet select,body#dummybodyid .diigolet *{background:transparent none;padding:0;margin:0;border:#000 0 solid;text-align:left;text-decoration:none;text-transform:none;text-indent:0;line-height:normal;word-break:normal;word-wrap:normal;width:auto;height:auto;color:inherit;font:inherit;float:none;cursor:default;position:static;overflow:visible;max-width:none;box-shadow:none;opacity:1;border-radius:0;}
body#dummybodyid .diigolet{color:#000;font:normal normal normal 13px arial,helvetica,clean,sans-serif;}
body#dummybodyid .diigolet input[type=text],body#dummybodyid .diigolet textarea,body#dummybodyid .diigolet select,body#dummybodyid .diigolet fieldset{background-color:#FFF;border:1px #999 solid;padding:1px;font-size:12px!important;display:inline;border-radius:2px;}
body#dummybodyid .diigolet select{padding:0;height:20px;}
body#dummybodyid .diigolet input[type=text],body#dummybodyid .diigolet textarea{cursor:text;}
body#dummybodyid .diigolet input[type=text]{height:20px!important;}
body#dummybodyid .diigolet input[type="button"],body#dummybodyid .diigolet input[type="submit"],body#dummybodyid .diigolet input[type="reset"],body#dummybodyid .diigolet input[type="file"]{color:buttontext;cursor:default;padding:2px 5px;text-align:center;border:1px solid #ccc;background:#fff;border-radius:2px;background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#f8f8f8),to(#d2d2d2));}
body#dummybodyid .diigolet input[type="button"]:active,body#dummybodyid .diigolet input[type="submit"]:active,body#dummybodyid .diigolet input[type="reset"]:active,body#dummybodyid .diigolet input[type="file"]:active{background:#ddd;}
body#dummybodyid .diigolet textarea{white-space:normal!important;}
body#dummybodyid .diigolet input.diigo-check{border:none;vertical-align:middle;}
body#dummybodyid .diigolet input.diigo-button{font-size:12px!important;font-weight:bold;padding:4px 8px;cursor:pointer;border-radius:4px;}
body#dummybodyid .diigolet input.diigo-button#diigolet-dlgBm-btnSave{width:56px;color:white;height:25px;-webkit-border-radius:4px;background-color:rgba(237,237,237,0);-webkit-box-shadow:0 1px 1px rgba(0,0,0,.15);border:solid 1px #0388dc;background-image:-webkit-linear-gradient(top,#4eaffa,#0492f5);}
body#dummybodyid .diigolet input.diigo-button#diigolet-dlgBm-btnSave:hover{background-image:-webkit-linear-gradient(top,#349ef0,#0580d6);}
body#dummybodyid .diigolet input.diigo-button#diigolet-dlgBm-btnSave:active{background-image:-webkit-linear-gradient(bottom,#4eaffa,#0492f5);}
body#dummybodyid .diigolet input.diigo-downlist{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/arrow-down.png) 50% 50% no-repeat,-webkit-gradient(linear,0% 0,0% 100%,from(#f8f8f8),to(#d2d2d2));width:12px;margin-left:-16px;}
body#dummybodyid .diigolet input.diigo-downlist:active{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/arrow-down.png) 50% 50% no-repeat,#ddd;}
body#dummybodyid .diigolet div.diigo-buttonswitchlist{padding:4px 2px;border:1px solid #ccc;position:absolute;right:72px;background:#fff;z-index:100000;}
body#dummybodyid .diigolet div.diigo-buttonswitchlist ul li{padding:2px 6px;}
body#dummybodyid .diigolet div.diigo-buttonswitchlist ul li:hover{background:#43658F;color:#fff;cursor:pointer;}
body#dummybodyid #diigoletFNSubmit{width:50px;}
body#dummybodyid .diigolet table{border-collapse:collapse;border-spacing:0;width:auto;}
body#dummybodyid .diigolet label{cursor:pointer!important;display:inline;vertical-align:middle;}
body#dummybodyid .diigolet fieldset,body#dummybodyid .diigolet img{border:0;}
body#dummybodyid .diigolet address,body#dummybodyid .diigolet caption,body#dummybodyid .diigolet cite,body#dummybodyid .diigolet code,body#dummybodyid .diigolet dfn,body#dummybodyid .diigolet em,body#dummybodyid .diigolet strong,body#dummybodyid .diigolet th,body#dummybodyid .diigolet var{font-style:normal;font-weight:bold;}
body#dummybodyid .diigolet ol,body#dummybodyid .diigolet ul,body#dummybodyid .diigolet li{list-style:none;display:block;}
body#dummybodyid .diigolet caption,body#dummybodyid .diigolet th{text-align:left;}
body#dummybodyid .diigolet h1,body#dummybodyid .diigolet h2,body#dummybodyid .diigolet h3,body#dummybodyid .diigolet h4,body#dummybodyid .diigolet h5,body#dummybodyid .diigolet h6{font-weight:bold;}
body#dummybodyid .diigolet q:before,body#dummybodyid .diigolet q:after{content:'';}
body#dummybodyid .diigolet abbr,body#dummybodyid .diigolet acronym{border:0;}
body#dummybodyid .diigolet a:link,body#dummybodyid .diigolet a:visited,body#dummybodyid .diigolet a:hover,body#dummybodyid .diigolet a:active{text-decoration:none;color:#00F;cursor:pointer!important;}
body#dummybodyid .diigolet a:hover{text-decoration:underline;}
body#dummybodyid .diigolet a *{cursor:inherit;}
body#dummybodyid #diigolet-tray{position:fixed;top:0;left:10;width:16px;height:16px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv3.gif") no-repeat left -4px;z-index:2147483646;}
body#dummybodyid .diigolet a.diigolet-Help:link,body#dummybodyid .diigolet a.diigolet-Help:visited{color:#06F;}
body#dummybodyid .diigolet a.diigolet-Help:hover,body#dummybodyid .diigo a.diigolet-Help:active{color:#00F;}
body#dummybodyid .diigolet label{margin-left:3px;}
body#dummybodyid .diigolet span.noComments{color:#AAA;font-size:10px;}
body#dummybodyid #diigolet-toolbar{border:none;width:100%;position:absolute;top:0;left:0;z-index:2147483647;color:#333;}
body#dummybodyid #diigolet-tb-content{padding:3px 5px;background:#EFEDDE url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigolet-toolbar-bg2.gif) repeat scroll 0;}
body#dummybodyid #diigolet-tb-bar span,body#dummybodyid #diigolet-tb-bar div,body#dummybodyid #diigolet-tb-bar a,body#dummybodyid #diigolet-tb-bar em{line-height:24px;}
body#dummybodyid #diigolet-tb-shadow{height:5px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigolet-toolbar-shadow.png) repeat-x left top;}
* html body#dummybodyid #diigolet-tb-shadow.ie6{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true,sizingMethod=scale,src="chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigolet-toolbar-shadow.png");overflow:hidden;background:none;}
body#dummybodyid #diigolet-help{display:none;position:absolute;top:29px;right:10px;width:200px;border:1px #ccc solid;background-color:#FFC;padding:6px 16px 6px 6px;}
body#dummybodyid .diigolet a.diigoletButton{height:24px;float:left;padding-right:4px;cursor:pointer!important;}
body#dummybodyid .diigolet a.diigoletButton:hover{text-decoration:none;color:#000;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3_r.png") no-repeat right top;}
body#dummybodyid .diigolet a.diigoletButton:active{background-position:right bottom;}
body#dummybodyid .diigolet a.diigoletButton b{font-weight:normal;color:#000;line-height:24px;float:left;padding-left:4px;height:24px;}
body#dummybodyid #diigolet-button-highlight-dropdown{width:8px;height:16px;margin-right:4px;background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/down_arrow.gif') no-repeat scroll left 2px;}
body#dummybodyid #diigolet-button-highlight-dropdown.mouseovered{border-left:1px solid #888;margin-right:0;text-decoration:none;width:11px;height:24px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn4.png") no-repeat left top!important;}
body#dummybodyid #diigolet-button-highlight-dropdown.mouseoveredIe{border-left:1px solid #888;margin-right:1px;text-decoration:none;width:11px;height:24px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn4.png") no-repeat left top!important;}
body#dummybodyid #diigolet-button-highlight-dropdown.checked{border-left:1px solid #888;margin-right:0;text-decoration:none;width:11px;height:24px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn4_s.png") no-repeat left top!important;}
body#dummybodyid #diigolet-button-highlight.mouseovered{text-decoration:none;color:#000;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3_r.png") no-repeat right top!important;}
body#dummybodyid #diigolet-button-highlight.mouseoveredIe{text-decoration:none;color:#000;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3_r.png") no-repeat right top!important;}
body#dummybodyid #diigolet-button-highlight.mouseovered b.outer{background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3.png') no-repeat left top;}
body#dummybodyid #diigolet-button-highlight.mouseoveredIe b.outer{background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3.png') no-repeat left top;}
body#dummybodyid a#diigolet-button-highlight b.outer{padding-right:5px;}
body#dummybodyid a#diigolet-button-highlight{padding-right:0!important;}
body#dummybodyid a.diigoletButton:hover b.outer{background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3.png') no-repeat left top;}
body#dummybodyid a.diigoletButton:active b.outer{background-position:left bottom;}
body#dummybodyid .diigolet a.diigoletButton b b{font-size:12px;padding-left:20px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv3.gif") no-repeat left 50%;}
body#dummybodyid .diigolet a.diigoletButton:active b b{position:relative;top:1px;left:1px;}
body#dummybodyid .diigolet a.diigoletButton.diigoletDisabled{cursor:default;}
body#dummybodyid .diigolet a.diigoletButton.diigoletDisabled b b{color:#999;position:static;}
body#dummybodyid .diigolet a.diigoletButton.diigoletDisabled:hover{background:none transparent;}
body#dummybodyid .diigolet a.diigoletButton.diigoletDisabled:hover b.outer{background:none transparent;}
body#dummybodyid .diigolet a.diigoletButton.checked{background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3_r.png") no-repeat right top;background-position:right bottom;}
body#dummybodyid .diigolet a.diigoletButton.checked b.outer{background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletBtn3.png') no-repeat left top;background-position:left bottom;}
body#dummybodyid .diigolet a.diigoletButton.checked b b{position:relative;top:1px;left:1px;}
body#dummybodyid #diigolet-tb-btnSidebar b b{background-position:left -24px;}
body#dummybodyid #diigolet-tb-btnSidebar.toClose b b{background-position:left -48px;}
body#dummybodyid #diigolet-tb-btnBookmark b b{background-position:left -144px;}
body#dummybodyid #diigolet-tb-btnBookmark.saved b b{background-position:left -120px;}
body#dummybodyid #diigolet-button-highlight b b{background-position:left -72px;}
body#dummybodyid #diigolet-button-highlight.dontShow b b{background-position:left -96px;}
body#dummybodyid #diigolet-button-highlight.yellow b b{background-position:left -355px;}
body#dummybodyid #diigolet-button-highlight.blue b b{background-position:left -375px;}
body#dummybodyid #diigolet-button-highlight.green b b{background-position:left -395px;}
body#dummybodyid #diigolet-button-highlight.pink b b{background-position:left -415px;}
body#dummybodyid .diigolet .colorItem{padding-left:20px;height:16px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv3.gif") no-repeat left -440px;}
body#dummybodyid #diigolet-context-yellow b,body#dummybodyid #diigolet-colorMenu-yellow b{background-position:left -440px;}
body#dummybodyid #diigolet-context-blue b,body#dummybodyid #diigolet-colorMenu-blue b{background-position:left -460px;}
body#dummybodyid #diigolet-context-green b,body#dummybodyid #diigolet-colorMenu-green b{background-position:left -480px;}
body#dummybodyid #diigolet-context-pink b,body#dummybodyid #diigolet-colorMenu-pink b{background-position:left -500px;}
body#dummybodyid #diigolet-context-yellow.colorchecked b,body#dummybodyid #diigolet-colorMenu-yellow.colorchecked b{background-position:left -520px;}
body#dummybodyid #diigolet-context-blue.colorchecked b,body#dummybodyid #diigolet-colorMenu-blue.colorchecked b{background-position:left -540px;}
body#dummybodyid #diigolet-context-green.colorchecked b,body#dummybodyid #diigolet-colorMenu-green.colorchecked b{background-position:left -560px;}
body#dummybodyid #diigolet-context-pink.colorchecked b,body#dummybodyid #diigolet-colorMenu-pink.colorchecked b{background-position:left -580px;}
body#dummybodyid #diigolet-tb-btnFloatNote b b{background-position:left -167px;}
body#dummybodyid #diigolet-tb-btnTwitter b b{background:transparent url("http://twitter.com/favicon.ico") no-repeat left 50%;}
body#dummybodyid #diigolet-tb-btnComment b b{background-position:left -192px;}
body#dummybodyid #diigolet-tb-btnComment.commented b b{background-position:left -192px;}
body#dummybodyid #diigolet-tb-btnMore b b{background-position:left 0;}
body#dummybodyid #diigolet-tb-btnSignIn b b{background-position:left -264px;}
body#dummybodyid #diigolet-tb-btnHide{float:right;height:24px;width:16px;background:transparent url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv3.gif") no-repeat left -240px;}
body#dummybodyid div.diigoIcon{cursor:pointer!important;margin:0;padding:0;position:absolute;display:none;width:24px!important;z-index:2147483643;height:23px!important;background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/edit-highlight.png') no-repeat left;}
body#dummybodyid div.diigoIcon span{color:#000;display:block;font-family:Helvetica,Arial,sans-serif;font-size:13px;font-weight:700;line-height:18px;text-align:center;text-shadow:0 1px 1px #FFF;text-decoration:none;text-indent:0;}
body#dummybodyid div.diigoHighlightcommented{display:block!important;}
body#dummybodyid div.ImageIcon{background-color:transparent!important;}
body#dummybodyid div.diigoIcon:hover{background-background:transparent!important;background-repeat:no-repeat!important;background-position:right!important;}
body#dummybodyid div.diigoHighlightcommented.TextIcon{left:0;top:-8px;}
body#dummybodyid div.diigoHighlightcommented.public{background:#FFF url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/public-annotation.png') no-repeat left;}
body#dummybodyid div.diigoHighlightcommented.private{background:#FFF url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/private-annotation.png') no-repeat left;}
body#dummybodyid div.diigoHighlightcommented.group{background:#FFF url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/group-annotation.png') no-repeat left;}
body#dummybodyid #diigolet-toolbar .dropdownMenu{display:none;border:1px solid #999;font:12px arial,helvetica,clean,sans-serif;background-color:Menu;padding:2px 0;z-index:2147483647;position:absolute;top:30px;width:140px;}
body#dummybodyid #diigolet-toolbar .dropdownMenu a,body#dummybodyid #diigolet-toolbar .dropdownMenu a:link,body#dummybodyid #diigolet-toolbar .dropdownMenu a:visited,body#dummybodyid #diigolet-toolbar .dropdownMenu a:hover,body#dummybodyid #diigolet-toolbar .dropdownMenu a:active{display:block;padding:2px 12px;font-weight:normal;text-decoration:none;color:#000;background:#fff;cursor:default;}
body#dummybodyid #diigolet-toolbar .dropdownMenu a:hover,body#dummybodyid #diigolet-toolbar .dropdownMenu a:active{color:#fff;background:#09f;}
body#dummybodyid #diigolet-notify{display:none;position:absolute;top:33px;left:0;border:1px #ccc solid;background-color:#FFC;padding:6px 16px 6px 6px;z-index:2147483647;}
body#dummybodyid #diigolet-notify.right{left:auto;right:0;text-align:right;}
body#dummybodyid .diigolet .tagList{margin:2px 0;float:left;}
body#dummybodyid .diigolet .tagList a{margin-right:6px;margin-bottom:4px;color:windowtext;text-decoration:none;border-bottom:1px solid #C9D7F1;border-right:1px solid #C9D7F1;border-top:1px solid #F5F5FA;border-left:1px solid #F5F5FA;padding:2px 3px;font-size:12px;height:15px;line-height:15px;overflow-y:hidden;overflow-x:hidden;display:block;float:left;cursor:default;background-color:#F5F5FA;}
body#dummybodyid .diigolet .tagList a:link{color:windowtext;}
body#dummybodyid .diigolet .tagList a:hover{border-width:1px;border-color:#04c;text-decoration:none;}
body#dummybodyid .diigolet .tagList a.inused{color:#008000;}
body#dummybodyid .diigolet .tagList a.selected{color:#fff;background-color:#06f;border-top:1px solid #06f;border-left:1px solid #06f;}
body#dummybodyid .diigolet .tagList a span{display:inline;white-space:nowrap;}
body#dummybodyid .diigolet .loading{display:none;}
body#dummybodyid .diigolet .tagLoading a{display:none;margin-bottom:10px;}
body#dummybodyid .diigolet .tagList.tagLoading .loading{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/indicator.gif) no-repeat left top;height:16px;padding-left:22px;display:block;}
body#dummybodyid .diigolet .tagLoading .tagListHeader{display:none;}
body#dummybodyid .diigolet .tagListHeader{cursor:pointer;float:left;width:100px;line-height:23px;}
body#dummybodyid .diigolet .tagListHeader:hover{text-decoration:underline;}
body#dummybodyid .diigolet .tagList div{color:#666!important;font-size:12px!important;font-weight:bold!important;padding-right:5px!important;text-align:left!important;}
body#dummybodyid #diigolet-twitter{background-color:threedface;font-family:Arial,sans-serif;font-size:13px;color:windowtext;padding:5px 5px;margin:0;left:0;top:30px;z-index:2147483646;width:380px;position:static;border:1px #09F solid;border-left-width:0;}
body#dummybodyid #diigolet-twitter input{vertical-align:middle;}
body#dummybodyid .diigolet .twitterlogo{width:210px;height:49px;FILTER:progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true,sizingMethod=scale,src="http://assets3.twitter.com/images/twitter.png");}
body#dummybodyid #diigolet-tagForward{border:1px #bbb solid;border-left-width:1;width:466px;position:static;right:5px;top:75px;z-index:2147483646;background-color:#EDEDED;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 3px;}
body#dummybodyid #diigolet-tagForward .tabContainer{text-align:center;margin:5px;}
body#dummybodyid #diigolet-tagForward .tab{margin-right:8px;margin-left:8px;padding:0 8px 2px 8px;font-weight:bold;}
body#dummybodyid #diigolet-tagForward .tabContainer a:link,body#dummybodyid #diigolet-tagForward .tabContainer a:visited{padding:4px;border:1px #fff solid;font-weight:bold;color:#06c;text-decoration:none;}
body#dummybodyid #diigolet-tagForward .tabContainer a.active:link,body#dummybodyid #diigolet-tagForward .tabContainer a.active:visited{border:none;background-color:#09f;color:#fff;padding:5px;}
body#dummybodyid #diigolet-tagForward .tabContainer a:hover,body#dummybodyid #diigolet-tagForward .tabContainer a:active{border:1px #09f solid;}
body#dummybodyid #diigolet-tagForward div.tabContent{display:none;}
body#dummybodyid #diigolet-tagForward div.tabContent.active{display:block;}
body#dummybodyid #diigolet-tagForward-caption{text-align:center;line-height:30px;font-size:14px;font-weight:bold;}
body#dummybodyid #diigolet-tagForward-remove{color:#00F;text-decoration:underline;line-height:30px;font-size:11px!important;position:absolute;right:20px;top:0;}
body#dummybodyid #diigolet-tagForward .diigo-hr{width:426px;border-top:1px #ccc solid;margin:0 auto;height:1px;overflow:hidden;}
body#dummybodyid .diigolet .diigo-table{margin:10px 20px;}
body#dummybodyid .diigolet .diigo-table td{padding:2px 0;}
body#dummybodyid .diigolet .diigo-table th{color:#666;font-weight:bold;padding-right:5px;width:62px;text-align:left;font-size:12px!important;}
body#dummybodyid .diigolet .diigolet-input{width:350px;padding:1px;font-size:12px!important;height:16px!important;padding-left:3px!important;line-height:16px!important;outline:none;!important;}
body#dummybodyid .diigolet .diigolet-input:focus{border:solid 1px #3996ed;-webkit-box-shadow:0 0 1px rgba(77,144,254,.55);}
body#dummybodyid #diigolet-tagForward.diigolet select{outline:none;padding:1px;height:22px;}
body#dummybodyid #diigolet-tagForward.diigolet select:focus{border:solid 1px #3996ed;-webkit-box-shadow:0 0 1px rgba(77,144,254,.55);}
body#dummybodyid #Diigo-Bookmark-Description,body#dummybodyid #Diigo-Forward-PS{width:350px;height:65px;margin:5px 0;max-width:350px;outline:none;}
body#dummybodyid #Diigo-Bookmark-Description:focus{border:solid 1px #3996ed;-webkit-box-shadow:0 0 1px rgba(77,144,254,.55);}
body#dummybodyid #Diigo-Bookmark-Url{height:20px!important;}
body#dummybodyid #Diigo-Bookmark-Title{height:20px!important;}
body#dummybodyid #Diigo-Bookmark-Url.invalid{border:1px solid #f00;}
body#dummybodyid #Diigo-Bookmark-Title.invalid{border:1px solid #f00;}
body#dummybodyid #Diigo-Bookmark-Tag-Wrapper{display:inline-block;border:1px solid #999;border-radius:2px;background-color:white;}
body#dummybodyid #Diigo-Bookmark-Tag{width:329px;vertical-align:middle;border:none;outline:none;height:20px!important;line-height:17px!important;}
body#dummybodyid .diigolet #Diigo-Bookmark-Tag{box-shadow:none;}
body#dummybodyid #Diigo-Bookmark-Tag-Wrapper.active{border:solid 1px #3996ed;-webkit-box-shadow:0 0 1px rgba(77,144,254,.55);}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud{visibility:hidden;max-height:300px;width:353px!important;position:absolute;left:0;top:25px;background-color:white;border:1px solid #ccc;-webkit-box-shadow:0 1px 3px rgba(0,0,0,.15);font-size:12px!important;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud-Container::-webkit-scrollbar{width:6px;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud-Container::-webkit-scrollbar-track-piece{background-color:transparent;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud-Container::-webkit-scrollbar-thumb:vertical{height:20px;background-color:#CCC;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud-Container::-webkit-scrollbar-thumb:hover{background-color:#aaa;}
body#dummybodyid #Diigo-Bookmark-Tag-Wrapper.opened+#Diigo-Bookmark-Tag-Cloud{visibility:visible;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud ul li{display:inline-block;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud .Diigo-Bookmark-Tag-item{margin-left:3px;text-decoration:none;color:#04c;line-height:normal;display:inline-block;line-height:140%;cursor:pointer;padding:0 2px;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud .Diigo-Bookmark-Tag-item.selected{background-color:#09f;color:white;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud>div:first-child{height:20px;width:100%;line-height:20px;font-weight:bold;border-bottom:1px solid #ccc;text-indent:2px;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud .Diigo-Bookmark-Tag-item:hover{text-decoration:underline;}
body#dummybodyid #Diigo-Bookmark-Tag-Cloud-Container{max-height:272px;overflow:auto;width:348px;padding:3px 5px 5px 0;}
body#dummybodyid #Diigo-Bookmark-Tag-Eidt{float:right;margin-right:3px;}
body#dummybodyid #Diigo-Bookmark-Tag-dropdown{height:19px;width:20px;background-color:white;vertical-align:middle;display:inline-block;background:url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/t-arrow.png") no-repeat 0 1px;cursor:pointer;}
body#dummybodyid #Diigo-Bookmark-Tag-Wrapper.opened #Diigo-Bookmark-Tag-dropdown{-webkit-transform:rotate(180deg);background:url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/t-arrow.png") no-repeat 0 0;}
body#dummybodyid #Diigo-Bookmark-Tag-Wrapper.opened #Diigo-Bookmark-Tag-dropdown:hover{background-position:0 -19px;}
body#dummybodyid #Diigo-Bookmark-Tag-dropdown:hover{background-position:0 -18px;}
body#dummybodyid .diigo-table .diigo-invalid-input{display:none;height:16px;width:16px;background:url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/icons.png");background-position:-16px -80px;margin-left:4px;}
body#dummybodyid .diigolet .diigolet-submit{width:140px;height:25px;text-align:center;}
body#dummybodyid #diigolet-txtPermalink{background-color:#eee;padding:3px;font-size:13px;}
body#dummybodyid #diigolet-cross-promotion{font-family:arial,helvetica,sans-serif;font-size:12px;padding:10px;}
body#dummybodyid #diigolet-cross-promotion a{background:whiteSmoke;border:1px solid #CCC;color:#06C;display:block;padding:3px 10px;text-align:center;text-decoration:none;-webkit-box-shadow:rgba(255,255,255,0.6) 0 1px 0;-webkit-border-radius:10px;-webkit-transition:all .25s linear;}
body#dummybodyid #diigolet-cross-promotion a:hover{background:white;text-decoration:none;color:#04c;}
body#dummybodyid .diigoletContexMenu{border:1px solid #999;font:12px arial,helvetica,clean,sans-serif;padding:2px;background-color:Menu;z-index:2147483645;max-width:250px;}
body#dummybodyid #diigolet-csm #diigolet-csm-highlight{display:inline-block;height:22px!important;width:29px!important;background-image:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/highlight-large.png)!important;z-index:100000;}
body#dummybodyid #diigolet-csm #diigolet-csm-highlight.editing{background-position:0 -22px;}
body#dummybodyid #diigolet-csm #diigolet-csm-dropdown{display:inline-block;height:22px;width:11px;z-index:100000;background-image:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/highlight-dropdown.png)!important;}
body#dummybodyid #diigolet-csm #diigolet-csm-search{display:inline-block;height:22px!important;width:28px!important;background-image:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/search-large.png)!important;z-index:100000;}
body#dummybodyid #diigolet-csm a:visited,body#dummybodyid #diigolet-csm a:link{padding:0!important;}
body#dummybodyid #diigolet-csm{z-index:100000;height:22px!important;}
body#dummybodyid #diigolet-csm>a:hover{background-position:0 -22px;}
body#dummybodyid #diigolet-csm #diigolet-csm-dropdown:hover{background-position:0 -44px;}
body#dummybodyid #diigolet-csm #diigolet-csm-highlight:hover+a#diigolet-csm-dropdown{background-position:0 -22px;}
body#dummybodyid #diigolet-csm>a:active{background-position:0 -44px;}
body#dummybodyid #diigolet-csm #diigolet-csm-dropdown:active{background-position:0 -66px;}
body#dummybodyid #diigolet-csm #diigolet-csm-color{position:absolute;top:21px;left:1px;background-color:white;-webkit-box-shadow:0 1px 2px rgba(0,0,0,.35);line-height:13px;overflow:hidden;height:0;}
body#dummybodyid #diigolet-csm #diigolet-csm-color.hidden{height:0;}
body#dummybodyid #diigolet-csm #diigolet-csm-color.small{height:0;width:27px;display:block;}
body#dummybodyid #diigolet-csm .diigolet-csm-coloritem{float:left;display:block;float:left;cursor:pointer;}
body#dummybodyid #diigolet-csm-color.small .diigolet-csm-coloritem{height:7px;width:10px;}
body#dummybodyid #diigolet-csm #diigolet-csm-yellow{background-color:#fc6;border:1px solid #fc6;margin-right:1px;margin-bottom:1px;margin-left:1px;margin-top:1px;}
body#dummybodyid #diigolet-csm #diigolet-csm-blue{background-color:#7ccce5;border:1px solid #7ccce5;margin-bottom:1px;margin-top:1px;}
body#dummybodyid #diigolet-csm #diigolet-csm-green{background-color:#b4db66;border:1px solid #b4db66;margin-right:1px;margin-left:1px;margin-bottom:1px;}
body#dummybodyid #diigolet-csm #diigolet-csm-pink{background-color:#f98baf;border:1px solid #f98baf;margin-right:0!important;margin-bottom:1px;}
body#dummybodyid #diigolet-csm #diigolet-csm-color .diigolet-csm-coloritem:hover{border-color:#36c;}
body#dummybodyid #diigolet-annMenu-tip{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;}
body#dummybodyid .diigoletContexMenu a:link,body#dummybodyid .diigoletContexMenu a:visited{display:block;padding:2px 12px;text-decoration:none;color:#000;cursor:default;white-space:nowrap;}
body#dummybodyid .diigoletContexMenu a:hover:not(.colorItem),body#dummybodyid .diigoletContexMenu a:active{color:#fff;background:#09f;}
body#dummybodyid .diigoletContexMenu div.sep{line-height:0;border-top:1px solid #AAA;margin:3px 0;}
body#dummybodyid *html .diigoletContexMenu ._selection a{width:45px;}
body#dummybodyid *html .diigoletContexMenu ._highlight a{width:90px;}
body#dummybodyid .diigolet.diigoletFN{z-index:2147483642;width:394px;}
body#dummybodyid .diigolet.diigoletFN a:link,body#dummybodyid .diigolet.diigoletFN a:visited{color:#06c;}
body#dummybodyid .diigolet.diigoletFN a:hover,body#dummybodyid .diigolet.diigoletFN a:active{color:#333;text-decoration:none;}
body#dummybodyid .diigolet .diigoletFNL{width:23px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_l.png) no-repeat left top;}
body#dummybodyid .diigolet .diigoletFNT{height:32px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_t.png) no-repeat right top;cursor:move!important;}
body#dummybodyid .diigolet .diigoletFNR{width:16px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_r.png) no-repeat left bottom;overflow:hidden;vertical-align:bottom;}
body#dummybodyid .diigolet .diigoletFNB{height:34px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_b.png) no-repeat left bottom;}
body#dummybodyid .diigolet .diigoletFNTH{vertical-align:top;width:12px;}
body#dummybodyid .diigolet .diigoletFNTH div{width:12px;height:12px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_h_rt.gif) no-repeat right top;position:relative;top:5px;left:-22px;overflow:hidden;cursor:ne-resize!important;}
body#dummybodyid .diigolet .diigoletFNB{vertical-align:top;overflow:hidden;}
body#dummybodyid .diigolet .diigoletFNPosN .diigoletFNXjjR,body#dummybodyid .diigolet .diigoletFNPosN .diigoletFNXjjT,body#dummybodyid .diigolet .diigoletFNPosN .diigoletFNXjjB,body#dummybodyid .diigolet .diigoletFNPosN .diigoletFNTH div,body#dummybodyid .diigolet .diigoletFNPosN .diigoletFNB div{display:none;}
body#dummybodyid .diigolet .diigoletFNT h1{font:12px/19px Arial,Helvetica,sans-serif;font-weight:bold;color:#666;margin:4px 0 0 5px;padding:0;}
body#dummybodyid .diigolet .diigoletFNT div.menu{margin:3px 21px 10px 0;background-color:#fff9a4;border-right:1px solid #f2e984;border-left:1px solid #c9b822;}
body#dummybodyid .diigolet .diigoletFNT div.menu a{display:block;line-height:19px;float:left;color:#666;padding:0 5px;border-right:1px solid #c9b822;text-decoration:none;}
body#dummybodyid .diigolet .diigoletFNT div.menu a:hover,body#dummybodyid .diigolet .diigoletFNT div.menu a:active{background-color:#fff587;color:#333;}
body#dummybodyid .diigolet .diigoletFNT div.menu a.diigoletFNOpt{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_downdot.gif) no-repeat right top;padding-right:14px;}
body#dummybodyid .diigolet .diigoletFNT{font:12px/32px Arial,Helvetica,sans-serif;}
body#dummybodyid .diigolet .diigoletFNContent,body#dummybodyid .diigolet .diigoletFNComment{background-color:#fff89f;color:#666;font-family:Arial,Helvetica,sans-serif;font-size:11px;overflow:auto;width:355px;zoom:1;border-bottom:1px solid #E0DB9D;}
body#dummybodyid .diigolet .diigoletFNContent .diigoletFNAuthorP{font-size:10px;font-weight:normal;color:#666;margin:0 11px 5px 0;padding:2px 5px;line-height:100%;}
body#dummybodyid .diigolet .diigoletFNContent .diigoletFNAuthorP .diigoletFNAuthor{border-bottom:1px dotted #ccc;color:#06c;}
body#dummybodyid .diigolet .diigoletFNContent .diigoletFNAuthorP .diigoletFNAuthor:hover,body#dummybodyid .diigoletFNContent .diigoletFNAuthorP .diigoletFNAuthor:active{border-bottom:1px solid #ccc;color:#333;}
body#dummybodyid .diigolet .diigoletFNContent .diigoletFNAuthorP a{color:#999;}
body#dummybodyid .diigolet .diigoletFNContent .diigoletFNAuthorP a:hover,body#dummybodyid .diigoletFNContent .diigoletFNAuthorP a:active{color:#666;}
body#dummybodyid .diigolet.diigoletFN blockquote{color:#333;font-size:12px;padding:0 5px;}
body#dummybodyid .diigolet .diigoletFNComment select,body#dummybodyid .diigolet .diigoletFNComment input,body#dummybodyid .diigolet .diigoletFNComment textarea{font:11px/15px Verdana,Arial,Helvetica,sans-serif;max-width:345px;}
body#dummybodyid .diigolet .diigoletFNComment p{margin:5px 0;}
body#dummybodyid .diigolet .diigoletFNTDiv{height:32px;overflow:hidden;}
body#dummybodyid .diigolet.diigoletFN .menu{float:right;height:19px;overflow:hidden;}
body#dummybodyid .diigolet .labelList label{margin-right:2px;background-color:#eee;color:#666;white-space:nowrap;font-weight:normal;font-size:9px;}
body#dummybodyid .diigolet .labelList span{padding:0 2px;}
body#dummybodyid .diigolet .labelList a{padding:0 2px;background-color:#ffe76a;}
body#dummybodyid .diigolet .labelList a:hover{color:#fef5c7;text-decoration:none;}
body#dummybodyid .diigolet .labelList a.del{border:none;padding-right:2px;font-weight:normal;}
body#dummybodyid .diigolet a.del{cursor:pointer;background:url("chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv3.gif") no-repeat left -343px;}
body#dummybodyid .diigolet a.del:hover{filter:alpha(opacity=100);-moz-opacity:1;background-position:1px -342px;text-decoration:none;}
body#dummybodyid .diigolet ul.diigoletFNDropdown{position:absolute;display:none;left:10px;background-color:#fff89f;border:1px solid #c9b822;z-index:2147483647;}
body#dummybodyid .diigolet ul.diigoletFNDropdown li{padding-left:25px;}
body#dummybodyid .diigolet ul.diigoletFNDropdown a:link,body#dummybodyid .diigolet ul.diigoletFNDropdown a:visited{color:#666;display:block;width:85px;font:11px Arial,Helvetica,sans-serif;}
body#dummybodyid .diigolet ul.diigoletFNDropdown a:hover,body#dummybodyid .diigolet ul.diigoletFNDropdown a:active{background-color:#fff567;color:#333;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNL{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_l.gif) no-repeat left top;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNT{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_t.gif) no-repeat right top;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNR{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_r.gif) no-repeat left bottom;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNB{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_note_b.gif) no-repeat left bottom;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNT{height:23px;}
body#dummybodyid .diigolet.diigoletFNIEPatch .diigoletFNTDiv{height:23px;}
body#dummybodyid .diigoletFN.editing .diigoletFNComment{display:block;}
body#dummybodyid .personalText{color:#555!important;font-size:10px!important;display:inline-block;overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;width:343px!important;margin-top:4px!important;}
body#dummybodyid .IconFeild{float:left!important;margin-left:8px!important;margin-top:5px!important;}
body#dummybodyid .IconFeild:hover .editIcon{background-position:right!important;}
body#dummybodyid .multipalCol{padding-top:0!important;}
body#dummybodyid .singleCol{padding-top:7px!important;}
body#dummybodyid .myCommentSpan{margin-left:35px!important;}
body#dummybodyid .notMyCommentSpan{margin-left:15px!important;}
body#dummybodyid .footText{line-height:1.5;width:343px!important;}
body#dummybodyid div.floatNote{position:absolute!important;width:29px;height:36px;text-align:center;background:transparent url('chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_icon.png') no-repeat 50% 50%!important;z-index:2147483643;}
body#dummybodyid div.floatNote.diigoshow{-webkit-animation:bounceIn 400ms ease both;-webkit-animation-play-state:running;}
body#dummybodyid div.floatNote.diigoadd{-webkit-animation:flipInY 600ms ease both;-webkit-animation-play-state:running;}
body#dummybodyid div.floatNote span{color:#000;font:bold 13px Arial,Helvetica,sans-serif;cursor:default;line-height:37px;text-shadow:#fff 0 1px 0;}
html body#dummybodyid div.floatNote{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true,sizingMethod=scale,src="chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/float_icon.png");overflow:hidden;background:none;}
body#dummybodyid em.diigoHighlight{text-align:inherit;text-decoration:inherit;line-height:inherit;font:inherit;color:inherit;display:inline;position:relative;zoom:1;}
body#dummybodyid em.diigoHighlight.diigoHighlightcommented{padding-left:25px;}
body#dummybodyid em.diigoHighlight.mouseOvered{background-color:#ffc62a!important;}
body#dummybodyid em.diigoHighlight.yellow{background-color:#FF9;}
body#dummybodyid img.diigoHighlight.yellow{cursor:pointer;outline:2px solid #FF9!important;}
body#dummybodyid em.diigoHighlight.blue{background-color:#ABD5FF;}
body#dummybodyid img.diigoHighlight.blue{cursor:pointer;outline:2px solid #ABD5FF!important;}
body#dummybodyid em.diigoHighlight.green{background-color:#B2E57E;}
body#dummybodyid img.diigoHighlight.green{cursor:pointer;outline:2px solid #B2E57E!important;}
body#dummybodyid em.diigoHighlight.pink{background-color:#fcc;}
body#dummybodyid img.diigoHighlight.pink{cursor:pointer;outline:2px solid #fcc!important;}
body#dummybodyid img.diigoHighlight.mouseOvered{cursor:pointer;outline:2px solid #ffc62a!important;}
body#dummybodyid .diigolet .diigolet-closeBtn{position:absolute;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/close1.gif);width:14px;height:14px;top:2px;right:2px;cursor:pointer!important;}
body#dummybodyid .ac_results{border:1px solid #bbb;background:#fff none repeat scroll 0;cursor:pointer!important;font-size:11px!important;left:0;position:absolute;width:353px;z-index:2147483647;}
body#dummybodyid .ac_results ul{margin:0;padding:0;}
body#dummybodyid .ac_results li{list-style-image:none;list-style-position:outside;list-style-type:none;padding:2px 5px;}
body#dummybodyid .ac_results a{width:100%;}
body#dummybodyid .ac_results li.over{color:white;background:#09f none repeat scroll 0;}
body#dummybodyid #d3df-sidebar{border:1px #ccc solid;z-index:99997;}
body#dummybodyid #d3df-sidebar div.heading{padding:3px;font-size:13px;border-top:1px #E8EEF7 solid;font-weight:bold;zoom:1;}
body#dummybodyid #d3df-sidebar div.popOut{width:16px;height:16px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/popout.gif) no-repeat scroll left top;cursor:pointer;}
body#dummybodyid #d3df-sidebar div.popOut.popIn{background-image:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/popin.gif);}
body#dummybodyid #d3df-sidebar div.popOut.close{background-image:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/close1.gif);}
body#dummybodyid #d3df-sidebar div.heading a.add{background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv1.gif) no-repeat scroll left -172px;padding-left:18px;display:block;float:right;font-weight:normal;}
body#dummybodyid #d3df-sidebar a.togglePanel{background:transparent url(http://www.diigo.com/images/v2/eoc.gif) no-repeat scroll left top;display:block;float:right;width:16px;height:16px;}
body#dummybodyid #d3df-sidebar a.togglePanel.collapsed{background-position:left bottom;}
body#dummybodyid #d3df-sidebar ul,body#dummybodyid #d3df-sidebar ul li{list-style:none;overflow:hidden;zoom:1;}
body#dummybodyid #d3df-sidebar li.highlight a.highlight{overflow:hidden;height:24px;zoom:1;}
body#dummybodyid #d3df-sidebar ul.highlights li{margin:1px;}
body#dummybodyid #d3df-sidebar ul.comments li{margin:1px;padding:2px;}
body#dummybodyid #d3df-sidebar div.noComments{font-size:11px;text-align:center;padding:15px 5px;}
body#dummybodyid #d3df-sidebar p.commentBody,body#dummybodyid #d3df-sidebar p.commentBody a{font-size:11px;}
body#dummybodyid #d3df-sidebar a.avatar{float:left;margin-right:3px;}
body#dummybodyid #d3df-sidebar a.avatar img{padding:1px;border:1px #CCC solid;width:32px;height:32px;}
body#dummybodyid #d3df-sidebar .commentInfo{font-size:12px;}
body#dummybodyid #d3df-sidebar .commentInfo a{border-bottom:1px dotted #999;}
body#dummybodyid #d3df-sidebar a.highlight{line-height:24px;padding-left:18px;display:block;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv1.gif) no-repeat scroll left -192px;}
body#dummybodyid #d3df-sidebar a.floatNote{padding-left:16px;background:transparent url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/images/diigoletIconv1.gif) no-repeat scroll left -144px;}
body#dummybodyid #d3df-sidebar a.highlight .jumpTo{line-height:24px;padding-left:5px;font-size:12px;font-style:italic;}
body#dummybodyid #d3df-sidebar.themeDefault .bgColor1{background-color:#C3D9FF;}
body#dummybodyid #d3df-sidebar.themeDefault .bgColor2{background-color:#E8EEF7;}
body#dummybodyid #d3df-sidebar.themeDefault .bgColor3{background-color:#FFF;}
body#dummybodyid #d3df-sidebar.themeDefault .color1{color:#999;}
body#dummybodyid #d3df-sidebar.themeDefault .color2{color:#333;}
body#dummybodyid.diigoHiPen-yellow{cursor:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/highlighter-orange.cur) 4 15,text!important;}
body#dummybodyid.diigoHiPen-blue{cursor:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/highlighter-blue.cur) 4 15,auto!important;}
body#dummybodyid.diigoHiPen-green{cursor:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/highlighter-green.cur) 4 15,text!important;}
body#dummybodyid.diigoHiPen-pink{cursor:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/ietoolbar-images/highlighter-pink.cur) 4 15,text!important;}
body#dummybodyid .diigolet.notice{font:bold 13px/1.5 Helvetica,Arial,sans-serif;position:fixed;top:5px;left:0;width:100%;text-align:center;z-index:2147483647;height:1px;}
body#dummybodyid .diigolet.notice>div{border:1px solid #fad42e;background:#fea;border-radius:5px;color:#000;display:inline-block;padding:5px 10px 5px 5px;-webkit-box-shadow:rgba(0,0,0,0.3) 0 1px 1px;}
body#dummybodyid .diigolet.notice>div>b{display:inline-block;height:16px;width:16px;margin:2px 3px 0 0;background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -80px no-repeat;float:left;}
body#dummybodyid .diigolet.notice>div>p>a{font-size:12px;}
body#dummybodyid .diigolet.notice>div>p{float:left;max-width:420px;}
body#dummybodyid .diigolet.notice>div.alert{background:#fef6f3;border-color:#cd0a0a;}
body#dummybodyid .diigolet.notice>div.alert p #retry{margin-left:3px;text-decoration:underline;}
body#dummybodyid .diigolet.notice>div.alert>b{background-position:-16px -80px;}
body#dummybodyid .diigolet.notice>div.info>b{background-position:-32px -80px;}
body#dummybodyid .diigolet.notice>div.wait>b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/processing.gif) no-repeat scroll left 0 transparent;}
body#dummybodyid .diigolet.notice div #close{display:block;height:12px;width:12px;background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/close.png);float:right;margin-left:10px;margin-top:3px;}
body#dummybodyid .diigolet.notice div #close:hover{background-position:0 -12px;}
body#dummybodyid #diigolet-panel-panel{z-index:2147483641;}
body#dummybodyid #diigolet-panel-panel.notSignedIn .signedIn{display:none;}
body#dummybodyid #diigolet-panel-panel.signedIn .notSignedIn{display:none;}
body#dummybodyid #diigolet-panel-panel{border:1px solid #bbb;border-radius:3px;background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#dae8fa),to(#5aa0f5));border-color:#9ec7fb #77a1eb #5c93d6;font:normal 12px/1.5 Helvetica,Arial,sans-serif;padding:0 4px 5px;position:fixed;left:5px;top:5px;-webkit-box-shadow:rgba(0,0,0,0.3) 1px 1px 2px;white-space:nowrap;}
body#dummybodyid #diigolet-panel-header{border-bottom:1px solid #9ec7fb;color:#3b71b2;cursor:move;text-shadow:0 1px 0 #e3edfa;height:17px;line-height:18px;}
body#dummybodyid #diigolet-panel-options{cursor:default;float:right;height:16px;width:120px;text-align:right;}
body#dummybodyid #diigolet-panel-version{color:#555;font-size:.7em;display:none;}
body#dummybodyid #diigolet-panel-feedback{font-size:12px;margin-right:4px;line-height:20px;vertical-align:top;color:#04C;display:inline-block;position:relative;}
body#dummybodyid #diigolet-panel-feedback:hover{text-decoration:none;color:#02c;}
body#dummybodyid #diigolet-panel-feedback>b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -50px -129px no-repeat;display:inline-block;height:12px;margin-right:3px;width:12px;}
body#dummybodyid #diigolet-panel-closeBtn{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -1px 2px no-repeat;display:inline-block;height:16px;width:14px;}
body#dummybodyid #diigolet-panel-closeBtn:hover{background-position:-17px 2px;}
body#dummybodyid #diigolet-panel-moreBtn{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px 2px no-repeat;display:inline-block;height:16px;margin-right:3px;width:14px;text-decoration:none;position:relative;}
body#dummybodyid #diigolet-panel-moreBtn:hover{background-position:-48px 2px;}
body#dummybodyid .diigolet .optList{border:1px solid orange;border-radius:3px;border-color:#9ec7fb #77a1eb #5c93d6;list-style-type:none;margin:0;display:none;padding:2px;text-align:left;-webkit-box-shadow:rgba(0,0,0,0.3) 1px 1px 2px;text-shadow:none;font-size:12px;}
body#dummybodyid .diigolet .optList li{color:#43658f;padding:0 5px;}
body#dummybodyid .diigolet .optList li.sep{border-top:1px solid #83b9fd;margin:2px 2px 0;padding-top:2px;}
body#dummybodyid .diigolet .optList li:hover{color:#fff;background-color:#43658f;}
body#dummybodyid .diigolet .optList li b{float:left;width:16px;height:16px;background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 16px no-repeat;margin-right:5px;margin-top:2px;}
body#dummybodyid #diigolet-panel-feedback .optList .feecback_uservoice b{background-position:0 -128px;}
body#dummybodyid #diigolet-panel-feedback .optList .feecback_tweet b{background-position:-16px -128px;}
body#dummybodyid #diigolet-panel-feedback .optList .feecback_rate b{background-position:-32px -128px;}
body#dummybodyid #diigolet-panel-feedback .optList.dropdownShown,body#dummybodyid #diigolet-panel-moreBtn .optList.dropdownShown{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#fff),to(#cbdefc));display:block;white-space:nowrap;right:-5px;position:absolute;top:16px;z-index:99;}
body#dummybodyid #diigolet-panel-content{border-top:1px solid #d1e3f9;padding-top:4px;}
body#dummybodyid .diigolet .buttonSep{display:inline-block;height:21px;line-height:21px;background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#ccc),to(#bbb));width:1px;text-shadow:0 1px 0 #fff;-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 2px;}
body#dummybodyid .diigolet a.diigoButton{border-top:1px solid #bbb;border-radius:0;background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#fff),to(#e3eeff));border-color:#f5f5f5 #e8e8e8 #cdcdcd;color:#000;display:inline-block;height:20px;padding:0 5px;text-shadow:0 1px 0 #fff;-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 2px;}
body#dummybodyid .diigolet .diigoButton.first{border-top-left-radius:2px;border-bottom-left-radius:2px;}
body#dummybodyid .diigolet .diigoButton.last{border-top-right-radius:2px;border-bottom-right-radius:2px;}
body#dummybodyid .diigolet .diigoButton span{display:inline-block;height:20px;line-height:21px;}
body#dummybodyid .diigolet .diigoButton:hover{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#f3f8ff),to(#b3d1f5));border-color:#fff #b3d2f7 #90bdf4;}
body#dummybodyid .diigolet .diigoButton:active{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#c2d1e4),to(#f2f7fe));border-color:#fff #b3d2f7 #eee;}
body#dummybodyid .diigolet .diigoButton.pen{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#ccc),to(#fff));border-color:#fff #b3d2f7 #eee;}
body#dummybodyid .diigolet .diigoButton.withOptions{border-top-right-radius:0;border-bottom-right-radius:0;border-right:none;margin-right:0;}
body#dummybodyid .diigolet .diigoButton.opt{border-top-left-radius:0;border-bottom-left-radius:0;border-left:none;padding:0;}
body#dummybodyid .diigolet .diigoButton.opt span{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/arrow-down.png) 50% 50% no-repeat;width:12px;}
body#dummybodyid .diigolet .diigoButton.opt .optList{padding:2px;}
body#dummybodyid .diigolet .diigoButton.opt{position:relative;}
body#dummybodyid .diigolet .diigoButton.opt .optList.dropdownShown{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#fff),to(#cbdefc));display:block;white-space:nowrap;right:-5px;position:absolute;top:16px;z-index:99;}
body#dummybodyid .diigolet .diigoButton b{display:inline-block;height:16px;margin-right:3px;vertical-align:text-bottom;width:16px;}
body#dummybodyid #diigolet-panel-btnMore{padding:0;}
body#dummybodyid #diigolet-panel-highlightIcon.yellow{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -32px no-repeat;}
body#dummybodyid #diigolet-panel-highlightIcon.blue{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -32px no-repeat;}
body#dummybodyid #diigolet-panel-highlightIcon.green{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -32px no-repeat;}
body#dummybodyid #diigolet-panel-highlightIcon.pink{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -32px no-repeat;}
body#dummybodyid #diigolet-panel-bookmarkIcon{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -16px no-repeat;}
body#dummybodyid #diigolet-panel-bookmarkIcon.saved{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -16px no-repeat;}
body#dummybodyid #diigolet-panel-stickyIcon{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -16px no-repeat;}
body#dummybodyid #diigolet-panel-moreIcon{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -16px no-repeat;}
body#dummybodyid #diigolet-panel-shareIcon{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -96px no-repeat;}
body#dummybodyid #diigolet-panel-guideToHighlight{display:inline-block;vertical-align:middle;}
body#dummybodyid #diigolet-panel-guideToSignin{background-color:#5d8cc5;border-radius:5px;margin-top:10px;padding:2px 4px;}
body#dummybodyid #diigolet-panel-guideToSignin a{color:#d4e4f8;text-decoration:none;}
body#dummybodyid #diigolet-panel-guideToSignin a:hover{color:#fff;text-decoration:underline;}
body#dummybodyid #diigolet-panel-colorPicker li{padding-right:10px;}
body#dummybodyid #diigolet-panel-colorPicker b{display:inline-block;height:16px;margin-right:3px;width:16px;vertical-align:text-bottom;}
body#dummybodyid #diigolet-panel-colorPicker .yellow b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -48px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .blue b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -48px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .green b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -48px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .pink b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -48px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .yellow.selected b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -64px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .blue.selected b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -64px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .green.selected b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -64px no-repeat;}
body#dummybodyid #diigolet-panel-colorPicker .pink.selected b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -64px no-repeat;}
body#dummybodyid #diigolet-panel-btnMore.opt span{background:none;width:auto;}
body#dummybodyid .diigolet .moreActionShare b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -96px no-repeat;}
body#dummybodyid #diigolet-dialog-share{background-color:#fff;border:1px solid #666;border-radius:5px;font:normal 13px/1.5 Helvetica,Arial,sans-serif;position:fixed;left:5px;top:7px;-webkit-box-shadow:rgba(0,0,0,0.3) 1px 1px 2px;white-space:nowrap;width:520px;z-index:2147483646;}
body#dummybodyid #diigolet-dialog-share *{white-space:normal;}
body#dummybodyid #diigolet-dialog-share-title{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#f9f9f9),to(#cdcdcd));border:1px solid #ddd;border-top-left-radius:5px;border-top-right-radius:5px;border-top-color:#fff;border-bottom-color:#aaa;cursor:move;height:26px;line-height:26px;font-weight:700;text-shadow:0 1px 0 #f5f5f5;padding:0 3px;}
body#dummybodyid #diigolet-dialog-share-closeBtn{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -80px no-repeat;float:right;height:16px;margin-left:10px;width:16px;margin-top:5px;}
body#dummybodyid #diigolet-share-shareToTabs{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#478bde),to(#3669a8));list-style-type:none;padding:0 5px;margin:0;height:30px;line-height:30px;}
body#dummybodyid #diigolet-share-shareToTabs li{display:inline-block;line-height:22px;height:24px;margin-top:6px;}
body#dummybodyid #diigolet-share-shareToTabs li a{text-decoration:none;border:1px solid #5499ee;border-bottom-color:#3669a8;border-top-left-radius:5px;border-top-right-radius:5px;color:#b9d6f8;display:block;padding:0 5px;}
body#dummybodyid #diigolet-share-shareToTabs a:hover{color:#fff;}
body#dummybodyid #diigolet-share-shareToTabs a.current{background-image:-webkit-gradient(linear,0% 0,0% 100%,from(#eee),to(#fff));border-color:#fff;color:#222;}
body#dummybodyid #diigolet-share-shareToTabs a.current:hover{color:#222;}
body#dummybodyid #diigolet-share-shareToTabs li b{display:inline-block;width:16px;height:16px;vertical-align:text-bottom;margin-right:3px;}
body#dummybodyid .diigolet .shareToTwitter b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -96px no-repeat;}
body#dummybodyid .diigolet .shareToFacebook b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -96px no-repeat;}
body#dummybodyid .diigolet .shareToGplus b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -48px -96px no-repeat;}
body#dummybodyid .diigolet .shareToEmail b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) 0 -112px no-repeat;}
body#dummybodyid .diigolet .getAnnotatedLink b{background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -16px -112px no-repeat;}
body#dummybodyid .diigolet .twitterDesc{color:#777;font-size:13px;line-height:20px;}
body#dummybodyid #diigolet-share-twitterLeftChars{color:#999;float:right;font-size:20px;font-weight:700;line-height:20px;}
body#dummybodyid #diigolet-share-twitterLeftChars.full{color:#F00;}
body#dummybodyid #diigolet-dialog-share .inputTxt{border:1px solid #7F9DB9;border-radius:3px;font:normal 12px/1.5 Arial,Helvetica,sans-serif;}
body#dummybodyid #diigolet-dialog-share-twitterMsg{height:54px;width:100%;}
body#dummybodyid #diigolet-dialog-share .buttonRow{margin-top:5px;text-align:right;}
body#dummybodyid #diigolet-dialog-share .buttonRow input{margin-left:5px;padding:1px 6px;}
body#dummybodyid #diigolet-dialog-share input.defaultAction{font-weight:700;}
body#dummybodyid #diigolet-dialog-share-twitter{padding:10px;}
body#dummybodyid #diigolet-dialog-share-facebook{padding:5px;font-size:20px;height:100px;line-height:100px;text-align:center;}
body#dummybodyid #diigolet-dialog-share-gPlus{padding:5px;font-size:20px;height:100px;line-height:100px;text-align:center;}
body#dummybodyid #diigolet-dialog-share-gBuzz iframe{border:none;height:340px;width:100%;overflow:hidden;}
body#dummybodyid #diigolet-dialog-share-email{padding:10px;}
body#dummybodyid #diigolet-dialog-share-email>table{width:100%;border-width:0;margin-bottom:5px;}
body#dummybodyid #diigolet-dialog-share-email>table td{padding:2px 0;}
body#dummybodyid #diigolet-dialog-share-email label{font-weight:700;}
body#dummybodyid #diigolet-dialog-share-email-to,body#dummybodyid #diigolet-dialog-share-email-subject{width:100%;}
body#dummybodyid #diigolet-dialog-share-email-message{height:72px;width:100%;}
body#dummybodyid #diigolet-dialog-share-email-quotes-checker{font-weight:400!important;float:right;}
body#dummybodyid #diigolet-dialog-share-email-quotes-checker input{margin-right:2px;vertical-align:text-bottom;}
body#dummybodyid #diigolet-dialog-share-email-quotes{border:1px solid #bbb;border-radius:3px;width:100%;max-height:150px;overflow-y:scroll;}
body#dummybodyid #diigolet-aidlog-share-email-quotes-content{margin:5px 10px 10px 10px;}
body#dummybodyid #diigolet-dialog-share-annotatedLink{padding:10px;}
body#dummybodyid .diigolet .annotatedLinkInfo{border:1px solid #fad42e;background:#fea;border-radius:5px;color:#000;display:inline-block;padding:0 0 0 20px!important;position:relative;margin-bottom:10px!important;}
body#dummybodyid .diigolet .annotatedLinkInfo b{display:inline-block;height:16px;width:16px;margin-right:3px;background:url(chrome-extension://oojbgadfejifecebmdnhhkbhdjaphole/diigolet/chrome-panel-images/icons.png) -32px -80px no-repeat;position:absolute;left:1px;top:1px;}
body#dummybodyid #diigolet-dialog-share-annotatedLink-value{font-weight:700!important;font-size:13px!important;padding:2px;width:496px;}
body#dummybodyid #diigolet-dialog-share-annotatedLink-value.loading{color:#ccc;font-style:italic;}
body#dummybodyid #diigolet-dialog-share-annotatedLink-optLinks{float:left;}
body#dummybodyid .diigolet .autocompleteContacts{border:1px solid #d9d9d9;border-top-color:#999;border-left-color:#999;width:380px;}
body#dummybodyid .diigolet .recInput{font:12px verdana;border-width:0;float:left;margin:2px;padding-top:2px;}
body#dummybodyid .diigolet .recItem{border:1px solid #7B9EBD;padding:0 2px;background-color:#F0F5FE;float:left;margin:2px 2px 0 0;}
body#dummybodyid .diigolet .recInputSizer{position:absolute;visibility:hidden;left:0;bottom:0;font:11px verdana;}
body#dummybodyid .diigolet .accTip{position:absolute;border:1px solid #ddd;border-top:none;background-color:#f5f5f5;font-size:11px;color:#777;text-align:left;padding:2px 0;text-indent:5px;z-index:8998;}
body#dummybodyid .diigolet .accNotice{position:absolute;border:1px solid #ffd324;border-top:none;background-color:#fff6bf;font-size:11px;color:#600;text-align:left;padding:2px 0;text-indent:5px;z-index:8999;}
body#dummybodyid .diigolet .accList{position:absolute;border:1px solid #999;border-top:none;background-color:#fff;font:10px verdana;color:#777;text-align:left;z-index:9000;line-height:18px;}
body#dummybodyid .diigolet .accList .cItem{border-bottom:1px solid #ddd;background-color:#fff;cursor:pointer;padding:2px;color:#333;}
body#dummybodyid .diigolet .accList .cItem b{font-size:11px;font-weight:normal;color:#000;}
body#dummybodyid .diigolet .accList .cItem i,body#dummybodyid .recItem i{font-size:7pt;color:#090;font-style:normal;margin-right:2px;}
body#dummybodyid .diigolet .accList div strong{background-color:#FFFADB;padding:0 2px;}
body#dummybodyid .diigolet .accList div.hover{background-color:#E0ECFF;text-decoration:none;}
body#dummybodyid .diigolet .recItem a{color:#999;font-family:Verdana,Arial,Helvetica,sans-serif;font-size:12px;font-weight:bold;line-height:16px;margin:0 1px 0 3px;}
body#dummybodyid .diigolet .recItem a:hover{color:#333;text-decoration:none;}
body#dummybodyid .diigolet .cItem span.extraDesc{float:none;font-weight:normal;color:#777;margin-left:10px;font-style:italic;}
body#dummybodyid .diigolet .cItem span.extraDesc .keywordStrong{color:#000;font-style:italic;background-color:#fff;}
body#dummybodyid .diigolet .cItem span.keywordStrong{float:none;font-weight:bold;}
</style></head>
<body id="dummybodyid">
<div id="header_wrap">
   <h1><a href="https://www.facebook.com/groups/programmerMagazine">程式人雜誌</a> <sub> --  2013 年 5 月號 (開放公益出版品)</sub></h1>
</div>
<div id="content">
<div id="TOC">
<ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#授權聲明">授權聲明</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人短訊">程式人短訊</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#軟體短訊-cmake-專案檔產生工具">軟體短訊 – CMake 專案檔產生工具</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#硬體短訊-raspberry-pi-單板電腦">硬體短訊 – Raspberry Pi 單板電腦</a></li>
</ul></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人介紹">程式人介紹</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#大師風采-donald-ervin-knuth">大師風采 – Donald Ervin Knuth</a></li>
</ul></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人頻道">程式人頻道</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#mit-的自製電腦課程-nand2tetris">MIT 的自製電腦課程 – nand2tetris</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#看影片學-c-遊戲程式-2-使用-window-forms">看影片學 C# 遊戲程式 (2) – 使用 Window Forms</a></li>
</ul></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人討論區">程式人討論區</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#c-語言討論-學校沒教的那些事兒----以矩陣相加為例">C 語言討論 – 學校沒教的那些事兒！ -- 以矩陣相加為例</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#軟體工程討論-cmmiagile-與scrum">軟體工程討論 – CMMI、Agile 與Scrum</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#javascript-討論-繼承的實作方法">JavaScript 討論 – 繼承的實作方法</a></li>
</ul></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人文集">程式人文集</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#arduino入門教學5-多顆-led-的控制-作者copper-maa">Arduino入門教學(5) – 多顆 LED 的控制 (作者：Copper Maa)</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#javascript-5-在互動網頁中的應用以-html-編輯器為例-作者陳鍾誠">JavaScript (5) – 在互動網頁中的應用，以 HTML 編輯器為例 (作者：陳鍾誠)</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#r-統計軟體3-中央極限定理-作者陳鍾誠">R 統計軟體(3) – 中央極限定理 (作者：陳鍾誠)</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#opencv-1-c-語言影像辨識函式庫----簡介安裝與基本範例-作者da-wang">OpenCV (1) – C 語言影像辨識函式庫 -- 簡介、安裝與基本範例 (作者：Da Wang)</a></li>
</ul></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#雜誌訊息">雜誌訊息</a><ul>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#讀者訂閱">讀者訂閱</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#投稿須知">投稿須知</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參與編輯">參與編輯</a></li>
<li><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#公益資訊">公益資訊</a></li>
</ul></li>
</ul>
</div>
<h1 id="授權聲明"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#授權聲明">授權聲明</a></h1>
<p>本雜誌採用 創作共用：<a href="http://creativecommons.org/licenses/by-sa/3.0/tw/">姓名標示、相同方式分享</a> 授權，若您想要修改本書產生衍生著作時，至少應該遵守下列授權條件：</p>
<ol style="list-style-type: decimal">
<li>標示原作者姓名</li>
<li>採用 創作共用：<a href="http://creativecommons.org/licenses/by-sa/3.0/tw/">姓名標示、相同方式分享</a> 的方式公開衍生著作。</li>
</ol>
<p>另外、當本雜誌中有文章或素材並非採用 <a href="http://creativecommons.org/licenses/by-sa/3.0/tw/">姓名標示、相同方式分享</a> 時，將會在該文章或素材後面標示其授權，此時該文章將以該標示的方式授權釋出，請修改者注意這些授權標示，以避免產生侵權糾紛。</p>
<p>例如有些文章可能不希望被作為「商業性使用」，此時就可能會採用創作共用：<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/tw/">姓名標示、非商業性、相同方式分享</a> 的授權，此時您就不應當將該文章用於商業用途上。</p>
<p>最後、懇請勿移除公益捐贈的相關描述，以便讓愛心得以持續散播！</p>
<h1 id="程式人短訊"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人短訊">程式人短訊</a></h1>
<h2 id="軟體短訊-cmake-專案檔產生工具"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#軟體短訊-cmake-專案檔產生工具">軟體短訊 – CMake 專案檔產生工具</a></h2>
<p>最近在建置 OpenCV 時，發現居然需要用 CMake 才能完成，於是只好想辦法瞭解 CMake 到底為何物？</p>
<p>原本以為 CMake 是與 GNU make 類似的另一套專案建置工具，就好像 Ruby 的 Rake 一樣，但後來發現我錯了！</p>
<p>CMake 並不是用來取代 GNU make 的東西，而是著眼於跨平台的問題，利用一套更上層的 make 工具，同時產生 GNU 的 Makefile 與 Visual Studio 的 .sln 專案檔的一種工具，這樣的方式可以解決平台所衍生的不相容問題。 或許我們可以稱 CMake 是一種「產生專案建置檔的工具」(Meta-Project Maker)。</p>
<div class="figure">
<img src="./pmag201305_files/CMakeHomePage.jpg" alt="CMake 官網的首頁"><p class="caption">CMake 官網的首頁</p>
</div>
<h3 id="cmake-的歷史"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#cmake-的歷史">CMake 的歷史</a></h3>
<p>CMake 是為了解決美國國家醫學圖書館出資的 Visible Human Project 專案下的 Insight Segmentation and Registration Toolkit (ITK) 軟體的跨平台建構的需求而創造出來的，其設計受到了 Ken Martin 開發的 pcmaker 所影響。pcmaker 當初則是為了支援 Visualization Toolkit (VTK) 這個開放原始碼的三維圖形和視覺系統才出現的，今日 VTK 也採用了 CMake。在設計 CMake 之時，Kitware 公司的 Bill Hoffman 採用了 pcmaker 的一些重要想法，加上更多他自己的點子，想把 GNU 建構系統 的一些功能整合進來。CMake 最初的實作是在 2000 年中作的，在 2001 年初有了急速的進展，許多改良是來自其他把 CMake 整合到自己的系統中的開發者，比方說，採用 CMake 作為建構環境的 VXL 社群就貢獻了很多重要的功能，Brad King 為了支援 CABLE 和 GCC-XML 這套自動包裝工具也加了幾項功能，通用電氣公司的研發部門則用在內部的測試系統 DART，還有一些功能是為了讓 VTK 可以過渡到 CMake 和支援洛斯阿拉莫斯國家實驗室的 Advanced Computing Lab 的平行視覺系統 ParaView 而加的。</p>
<h3 id="使用-cmake-建置的軟體"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#使用-cmake-建置的軟體">使用 CMake 建置的軟體</a></h3>
<p>使用 CMake 的應用軟體很多，以下是維基百科列出的軟體：</p>
<blockquote>
<p>Allegro library, Armadillo - linear algebra library, Avidemux, Awesome, Blender 3D, Boost C++ Libraries, Bullet物理引擎, Chicken, Chipmunk physics engine, clang, Conky, Doomsday Engine, Drishti, Fennel, Gammu, GDCM, Gmsh, Hedgewars, Hypertable, hugin, IGSTK, Insight Segmentation and Registration Toolkit, KDE Software Compilation 4, Kicad, LMMS, LLVM, MiKTeX, MuseScore, MySQL (on Windows only), OGRE, OpenSceneGraph, OpenCV, OpenFLUID, ParaView, Poppler, PvPGN, Quantum GIS, Raw Therapee, Rem, Scribus, SuperTux, Slicer, Stellarium, The Visualization Toolkit, VXL, UFFS</p>
</blockquote>
<p>仔細看的話，您會發現這些軟體可都是大有來頭阿！可見 CMake 現在已經廣受開放原始碼群體的重用了阿！</p>
<h3 id="cmake-的使用方法"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#cmake-的使用方法">CMake 的使用方法</a></h3>
<p>如果您想知道 CMake 的使用方法，請參考以下「井民全」先生的網誌文章：</p>
<ul>
<li>[程式設計] 最簡單的 CMake 使用說明 – how to use cmake -- <a href="http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html">http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html</a></li>
</ul>
<h3 id="參考文獻"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻">參考文獻</a></h3>
<ul>
<li><a href="http://zh.wikipedia.org/zh-tw/CMake">維基百科:CMake</a></li>
<li><a href="http://zh.wikibooks.org/zh-hant/CMake_%E5%85%A5%E9%96%80">CMake 入門：維基教科書，自由的教學讀本</a></li>
<li><a href="http://blog.csdn.net/dbzhang800/article/details/6314073">cmake 学习笔记(一)</a></li>
<li>最簡單的 CMake 使用說明 – how to use cmake
<ul>
<li><a href="http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html">http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html</a></li>
</ul></li>
</ul>
<p>【本文由陳鍾誠取材並修改自維基百科】</p>
<h2 id="硬體短訊-raspberry-pi-單板電腦"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#硬體短訊-raspberry-pi-單板電腦">硬體短訊 – Raspberry Pi 單板電腦</a></h2>
<p>最近常聽網友們提到 Raspberry Pi ，引起了筆者的好奇，於是買了一本 「Raspberry Pi快速上手指南」， 發現這是一個大約信用卡大小的板子，卻可以外接「鍵盤、滑鼠、螢幕」等，成為一台完整的電腦。</p>
<p>這塊板子沒有 BIOS，預設採用 SD 卡開機，建議採用 Raspbian 這個作業系統，這是基於 Debian 的 Linux 系統。因此，您可以在上面跑大部分 Linux 可以跑的程式。</p>
<p>Raspberry Pi 採用 ARM 架構的 BroadCom BCM2835 處理器，以下是其實體圖照片：</p>
<div class="figure">
<img src="./pmag201305_files/RaspberryPi.jpg" alt="Raspberry Pi 板子的外型"><p class="caption">Raspberry Pi 板子的外型</p>
</div>
<p>不知是哪位高人，把 Raspberry Pi 翻譯為「樹莓派」，害我一度以為這個東西是個食品廣告，想說怎麼這麼多 「嵌入式開發者」同時喜歡上這種「派」(就是哪種很多奶油、黏答答的那種，我不是很愛阿！)，而且這讓我想起了 前一陣子突然很多 Maker 都喜歡製造用來分離 Oreo 餅乾與奶油的機器，如下列影片所示：</p>
<ul>
<li><a href="http://www.youtube.com/watch?v=pii4G8FkCA4">Youtube:OREO Separator Machine #1 - Creator: Physicist David Neevel</a></li>
<li><a href="http://www.youtube.com/watch?v=w485VU-S0Ig">Youtube:OREO Separator Machine #2 — Creators: Toy Scientists Bill and Barry</a></li>
<li><a href="http://www.youtube.com/watch?v=ryas71YWsx4">Youtube:OREO Separator Machine #3 — Creator: Conceptual Artist Collective DENTAKU</a></li>
<li><a href="http://www.youtube.com/watch?v=gBgfpl0lcIo">Youtube:OREO Separator Machine #4 — Creator: Robotic Butler HERB</a></li>
</ul>
<p>言歸正傳，讓我們回到「樹莓派」上吧！這種派雖然很小，但還是可以跑得動 X-Windows 呢？這個派夠強悍吧！</p>
<div class="figure">
<img src="./pmag201305_files/RaspberryPiSystem.JPG" alt="運行 X window的樹莓派系統"><p class="caption">運行 X window的樹莓派系統</p>
</div>
<h3 id="參考文獻-1"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻-1">參考文獻</a></h3>
<ul>
<li><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010580709">Raspberry Pi快速上手指南</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E6%A0%91%E8%8E%93%E6%B4%BE">維基百科：樹莓派</a></li>
<li><a href="http://en.wikipedia.org/wiki/Raspberry_Pi">Wikipedia:Raspberri Pi</a></li>
</ul>
<p>【本文由陳鍾誠取材並修改自維基百科】</p>
<h1 id="程式人介紹"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人介紹">程式人介紹</a></h1>
<h2 id="大師風采-donald-ervin-knuth"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#大師風采-donald-ervin-knuth">大師風采 – Donald Ervin Knuth</a></h2>
<p>如果您上過「資料結構」這門課，您可能會知道 B-Tree 這個多元樹結構，如果您修過「演算法」，您可能會聽過「Knuth–Morris–Pratt」這個字串搜尋演算法， 如果您修過編譯器，應該會知道 LR(K) 這類的語法剖析器，</p>
<p>如果您修過離散數學，您可能會知道有本書叫作「具體數學」(Concrete Mathematics)，事實上常被用來當離散數學的教科書。 為甚麼叫 Concrete Mathematics 呢？原因是 CONtinuous + disCRETE = CONCRETE，也就是「連續+離散數學=具體數學」。</p>
<p>如果您寫過論文，您可能會用過 LaTex、MikTex、或者用 LibreOffice 中的 TexMath 來寫數學式，甚至如果您寫過維基百科、或常用維基的方式寫網頁、 或者用過 pandoc 等軟體寫 markdown 格式的文章，您也可能會用 Tex 的格式來寫數學式。</p>
<p>以上這些事情，都與 Donald Ervin Knuth 有密切關連，這位生於 1938 年的著名電腦科學家，除了發明無數著名的演算法與資料結構之外，他還 發明了 LaTex 這個軟體，這個軟體直到現在都還有眾多的使用者，而其中的數學式之寫法，仍然在許多新的出版軟體裏被採用著。</p>
<div class="figure">
<img src="./pmag201305_files/KnuthAtOpenContentAlliance.jpg" alt="Knuth 於 2005年10月25日的照片，Jacob Appelbaum 攝"><p class="caption">Knuth 於 2005年10月25日的照片，Jacob Appelbaum 攝</p>
</div>
<p>筆者也是 Tex 數學式的愛用者，從 2007 年開始用 wikidot 以來就常用 Tex 寫數學式，之後用 LibreOffice 還是習慣安裝 TexMath 來寫 Tex，現在 用 markdown 寫書還是用 Tex 寫數學式，這都得感謝 Knuth (我可不希望用 MathML 寫數學式，因為真的會打到手斷掉！)。</p>
<p>(奇怪的是我念碩博士的時候從來沒想過要用 Tex 寫數學式，而是用 Word 的方程式編輯器，而且那時還不太會用 Word 的自動目錄， 論文的排版實在爛得可以，這樣居然也順利畢業了，真是僥倖。 -- 不過我的疑問是，學校怎麼從來沒人提過有「自動目錄」這件事啊？ 這不是研究生最應該學會的一件簡單事情嗎？冏！)</p>
<p>另外、Knuth 最為人稱道的，是他所寫的一部鉅著，總共預計出版七大冊的「The Art of Computer Programming」(事實上到目前為止只出到第四冊)， 稍微能看完其中一兩章的話，您就會對 Knuth 的邏輯頭腦感到非常驚訝。以下是該書的各冊標題與章節，您應該可以從中看出 Knuth 所涉略的領域。</p>
<pre><code>第一冊 - 基礎演算法（Fundamental Algorithms）
  第一章 - 基本觀念（Basic concepts）
  第二章 - 資訊結構（Information structures）
第二冊 - 半數值演算法（Seminumerical Algorithms）
  第三章 - 隨機數（Random numbers）
  第四章 - 算數（Arithmetic）
第三冊 - 排序與搜尋（Sorting and Searching）
  第五章 - 排序（Sorting）
  第六章 - 搜尋（Searching）
第四冊 - 組合演算法 (Combinatorial Algorithms),準備中(至2009年4月已出版五個分冊),測試版本已上載到Knuth's的網站).
  第4A卷, 列舉與回溯（Enumeration and Backtracking）
    第七章 - 組合的搜尋（Combinatorial searching）
  第4B卷, 圖形與網路演算法（Graph and Network Algorithms）
    第七章續（continued）
  第4C及4D(可能)卷, 最佳化與遞歸（Optimization and Recursion）
    第七章續（continued）
  第八章 - 遞歸（Recursion）
第五冊 - 造句演算法（Syntactic Algorithms）, 計劃中(預計2020年完成).
  第九章 - 語句掃瞄（Lexical scanning）
  第十章 - 剖析技術（Parsing techniques）
第六冊 - 與上下文無關語言理論（Theory of Context-Free Languages）, 計劃中
第七冊 - 編譯器技術（Compiler Techniques）,計劃中</code></pre>
<h3 id="參考文獻-2"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻-2">參考文獻</a></h3>
<ul>
<li><a href="http://www-cs-faculty.stanford.edu/~uno/">Donald E. Knuth 在史丹佛的網站</a></li>
<li><a href="http://en.wikipedia.org/wiki/Donald_Knuth">Wikipedia:Knuth</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E5%BE%B7%E7%BA%B3">維基百科:Knuth</a></li>
<li><a href="http://blog.sciencenet.cn/blog-61674-33964.html">教授还是程序员？- Donald Knuth访谈录</a></li>
<li><a href="http://9yls.net/17931.html">解读高德纳（Donald E.Knuth） : 最伟大的计算机程序员是如何诞生的？</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%89%BA%E6%9C%AF">維基百科:電腦程式設計藝術</a></li>
<li><a href="http://extensions.libreoffice.org/extension-center/texmaths-1">LibreOffice:TexMath 插件</a></li>
</ul>
<p>【本文由陳鍾誠取材並修改自維基百科】</p>
<h1 id="程式人頻道"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人頻道">程式人頻道</a></h1>
<h2 id="mit-的自製電腦課程-nand2tetris"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#mit-的自製電腦課程-nand2tetris">MIT 的自製電腦課程 – nand2tetris</a></h2>
<p>偶然在網路上看到網友分享以下的 TED 影片 -- 「錫蒙‧蕭肯的電腦自修課程」：</p>
<ul>
<li><a href="http://www.ted.com/talks/lang/zh-tw/shimon_schocken_the_self_organizing_computer_course.html">http://www.ted.com/talks/lang/zh-tw/shimon_schocken_the_self_organizing_computer_course.html</a></li>
</ul>
<p>錫蒙‧蕭肯是 MIT 的教授，他希望能夠讓學生學會自己動手做一台電腦，於是決定從 NAND 閘開始，然後建構出 CPU、組譯器、編譯器、虛擬機、作業系統、然後在上面寫一個小型打磚塊遊戲，於是他組織了一個團隊，並且 建立了一個網站，標題是「From NAND to Tetris -- Building a Modern Computer From First Principles」， 其網址如下：</p>
<ul>
<li><a href="http://www.nand2tetris.org/">http://www.nand2tetris.org/</a></li>
</ul>
<p>為了介紹這個課程的全貌，錫蒙‧蕭肯在以下影片中介紹了整個計畫與課程的架構：</p>
<ul>
<li><a href="http://youtu.be/JtXvUoPx4Qs">http://youtu.be/JtXvUoPx4Qs</a></li>
</ul>
<p>而且還針對這個課程出版了一本書，英文名稱是：「The Elements of Computing Systems: Building a Modern Computer from First Principles」 ，這本書還被大陸翻譯成中文版了，名稱是：「计算机系统要素：从零开始构建现代计算机」，您可以從下列網址看到其目錄與介紹：</p>
<ul>
<li><a href="http://baike.baidu.com/view/5688355.htm">http://baike.baidu.com/view/5688355.htm</a></li>
</ul>
<p>中國大陸的 Yu Fang Ming 將這個課程中的 CPU 與程式改寫並放到了 FPGA 上去執行，您可以從下列影片中看到他的執行過程與結果：</p>
<ul>
<li><a href="http://www.youtube.com/watch?v=UHty1KKjaZw">http://www.youtube.com/watch?v=UHty1KKjaZw</a></li>
</ul>
<p>雖然以上影片有提到「程式原始碼是開源的」，但可惜的是我沒有找到他所釋放出來的程式碼，不過我倒是找到了 另一個人實作該 CPU 的 Verilog 程式，網址如下：</p>
<ul>
<li><a href="http://blog.csdn.net/solstice/article/details/4091796">http://blog.csdn.net/solstice/article/details/4091796</a></li>
</ul>
<p>我對這個計畫特別有興趣，因為這簡直就是我正在做的「開放電腦計畫」，這讓我與「自己動手做一台電腦」的距離又拉進了不少！</p>
<p>您可以在下列連結當中看到關於這個主題的討論帖，以取得進一步更完整的訊息：</p>
<ul>
<li><a href="https://www.facebook.com/groups/programmerMagazine/permalink/627382940611759/">https://www.facebook.com/groups/programmerMagazine/permalink/627382940611759/</a></li>
</ul>
<p>【本文由陳鍾誠撰寫】</p>
<h2 id="看影片學-c-遊戲程式-2-使用-window-forms"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#看影片學-c-遊戲程式-2-使用-window-forms">看影片學 C# 遊戲程式 (2) – 使用 Window Forms</a></h2>
<p>上個月 Gary Lin 為我們講解了四集精彩的影片，從兩球互相追逐開始，然後逐步進入碰撞處理，一直到多個紅球藍球追逐等主題。</p>
<p>這個月 Gary Lin 又繼續為我們講解四集更精彩的教學，編輯將這個月的主題與網址分別整理如下：</p>
<table>
<thead>
<tr class="header">
<th align="left">影片名稱</th>
<th align="left">網址</th>
<th align="left">說明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">C# 遊戲程式設計 (04)</td>
<td align="left"><a href="http://youtu.be/ExZqwulxLIw">http://youtu.be/ExZqwulxLIw</a></td>
<td align="left">追逐球：子彈連發</td>
</tr>
<tr class="even">
<td align="left">C# 遊戲程式設計 (05)</td>
<td align="left"><a href="http://youtu.be/pULMs_Bi044">http://youtu.be/pULMs_Bi044</a></td>
<td align="left">追逐球：加入計分</td>
</tr>
<tr class="odd">
<td align="left">C# 遊戲程式設計 (06)</td>
<td align="left"><a href="http://youtu.be/DkQfeJd6JSI">http://youtu.be/DkQfeJd6JSI</a></td>
<td align="left">俄羅斯方塊：開始</td>
</tr>
<tr class="even">
<td align="left">C# 遊戲程式設計 (07)</td>
<td align="left"><a href="http://youtu.be/Fp0Ty9P71Vw">http://youtu.be/Fp0Ty9P71Vw</a></td>
<td align="left">俄羅斯方塊：第二集</td>
</tr>
<tr class="odd">
<td align="left">遊戲測試影片</td>
<td align="left"><a href="http://youtu.be/cfUW89M3yeo">http://youtu.be/cfUW89M3yeo</a></td>
<td align="left"></td>
</tr>
</tbody>
</table>
<p>【本文中的影片與教學由 Gary Lin 主講與提供，本文編輯者為陳鍾誠】</p>
<h1 id="程式人討論區"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人討論區">程式人討論區</a></h1>
<h2 id="c-語言討論-學校沒教的那些事兒----以矩陣相加為例"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#c-語言討論-學校沒教的那些事兒----以矩陣相加為例">C 語言討論 – 學校沒教的那些事兒！ -- 以矩陣相加為例</a></h2>
<p>有朋友在「程式人雜誌」社團上問到有關 C 語言的參數傳遞問題，其討論帖如下：</p>
<ul>
<li><a href="https://www.facebook.com/groups/programmerMagazine/permalink/622690621080991/">https://www.facebook.com/groups/programmerMagazine/permalink/622690621080991/</a></li>
</ul>
<p>筆者想藉此問題在此進行釐清與回答。</p>
<p>問題 1：C 語言的模組化問題</p>
<ul>
<li>吳秉穎：不好意思可以問一個小問題嗎?
<ul>
<li>老師給我的題目:以同一程式主類別之外部二維矩陣相加方式將 Sales A&amp;B 每個月相加，其結果再以不在同一程式方式與 Sales C 每個月相加和輸出結果。</li>
<li>因為要寫 C 跟JAVA，JAVA我是寫完了，但是不懂 C 要以不在同一程式方式寫是什麼意思? C 可以這樣寫嗎?</li>
</ul></li>
<li>陳鍾誠：就是用兩個以上的 .c 檔，加上 .h 檔的方式，例如：main.c module1.c module2.c module1.h module2.h 的方式。</li>
</ul>
<p>問題 2：矩陣參數與回傳值問題</p>
<ul>
<li>吳秉穎：不好意思 請問一下 陣列怎回傳到主程式</li>
</ul>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;iostream&gt;</span>
<span class="ot">#include&lt;stdio.h&gt;</span>
<span class="ot">#include&lt;stdlib.h&gt;</span>
<span class="co">/* run this program using the console pauser or add your own getch, system("pause") or input loop */</span>
<span class="dt">int</span> sum(<span class="dt">int</span> arr[<span class="dv">4</span>][<span class="dv">3</span>],<span class="dt">int</span> arr1[<span class="dv">4</span>][<span class="dv">3</span>]);
<span class="dt">int</span> sum1(<span class="dt">int</span> arr[<span class="dv">4</span>][<span class="dv">3</span>],<span class="dt">int</span> arr1[<span class="dv">4</span>][<span class="dv">3</span>]);
<span class="dt">void</span> show(<span class="dt">int</span> arr[<span class="dv">4</span>][<span class="dv">3</span>]);
<span class="dt">int</span> main(<span class="dt">int</span> argc,<span class="dt">char</span> *argv[]) {
    <span class="dt">int</span> a[<span class="dv">4</span>][<span class="dv">3</span>],b[<span class="dv">4</span>][<span class="dv">3</span>],c[<span class="dv">4</span>][<span class="dv">3</span>],d[<span class="dv">4</span>][<span class="dv">3</span>];
    printf(<span class="st">"請輸入A&amp;B&amp;C報表: </span><span class="ch">\n</span><span class="st">"</span>);
    <span class="kw">for</span>(<span class="dt">int</span> i=<span class="dv">0</span>;i&lt;<span class="dv">4</span>;i++)
    {
        <span class="kw">for</span>(<span class="dt">int</span> j=<span class="dv">0</span>;j&lt;<span class="dv">3</span>;j++)
        {
            scanf(<span class="st">"%d"</span>,&amp;a[i][j]);
            scanf(<span class="st">"%d"</span>,&amp;b[i][j]);
            scanf(<span class="st">"%d"</span>,&amp;c[i][j]);
            d[i][j]=a[i][j]+b[i][j];
        }
        printf(<span class="st">"</span><span class="ch">\n</span><span class="st">"</span>);
    }
    sum1(a,b);
    sum(c,d);
    system(<span class="st">"pause"</span>);
    <span class="kw">return</span> <span class="dv">0</span>;
}

<span class="dt">int</span> sum1(<span class="dt">int</span> arr[<span class="dv">4</span>][<span class="dv">3</span>],<span class="dt">int</span> arr1[<span class="dv">4</span>][<span class="dv">3</span>])
{
    <span class="dt">int</span> i,j,d[<span class="dv">4</span>][<span class="dv">3</span>];
    <span class="kw">for</span>(i=<span class="dv">0</span>;i&lt;<span class="dv">4</span>;i++)
    {
        <span class="kw">for</span>(j=<span class="dv">0</span>;j&lt;<span class="dv">3</span>;j++)
        {
            d[i][j]=arr[i][j]+arr1[i][j];
        }
    }
    show(d);
    <span class="co">//return (d[4][3]);</span>
} </code></pre>
<ul>
<li>吳秉穎：現在卡在是 我想要把 SUM1 的 D 再傳到 SUM 裡跟 C 家再一起</li>
<li>李○○：你在函數參數內再放入一個陣列指標參數 將arr + arr1的值指派給他 不用迴傳就可以拿到此值了</li>
<li>吳秉穎：恩我試試看</li>
<li>李○○：你的函數宣告有很大的問題 參數型太沒人這樣用的吧@@</li>
<li>李○○：感覺你對於記憶體概念跟指標不是很熟</li>
<li>吳秉穎：對呀!還在學 ...</li>
<li>若○○：你丟指標過去到涵式裡面就可以傳陣列了，2 維 = (ptr<em>)</em></li>
<li>若○○：
<ul>
<li>在 c 用標準的 stdio 涵式要小心很容易會爆掉 memory, 我舉例：scanf &lt;= 這個涵式是要靠 <code>\n</code> 或是 <code>\0</code> 斷尾，不然它會無止盡的去換算下去...</li>
<li>就是說如果你在 a[y][x] 裡面的值不是標準的 byte 或是整斷的結尾的話，那麼... %d 可能會轉成亂七八糟的東西出來，爆 mem 機率很大，而 &amp; 取指符號的用法是要一開始用的，我不知道在 a[y][x] 的地方可不可以取址，因為 c 沒有很高階，要先在 &amp;a 這裡取址，然後 a[y][x] 的位置要用算的，= (ptr[x] * ptr[y])* ，不知道我這樣說對不對...</li>
<li>二維的意思是方形的區塊，但是在 mem 裡面是 (x * y)* 這樣代表 a[x][y]，所以一般都會先把維給轉成指標再去運算，在宣告的時候 int a[y][x] 這樣的用法在 c 語言是每一個 a[][] 都是 int 的區斷，並不是整個 int 如果你用 sizeof() 去取得就是得到 int (x * y) 那麼大的一塊 mem 區域，然後 a 和 b 的 array 不能夠直接去做 sum 運算...</li>
<li>因為 int (x * y) 在 c 裡面是看成單獨的 int (x * y) 而不是一整個可以放單一個數值的，不知道我這樣會不會越說越亂...</li>
<li>最後要回傳的值，必須要符合你一開始給涵數所宣告的遞迴值，你用 int 去宣告，就要符合 int 型態，你可以傳 int 的指標‧</li>
</ul></li>
<li>劉○○：請問樓上的大大 我該如何釐清所有程式的概念阿..</li>
<li>若○○：好問題... 我也弄不懂...</li>
<li>劉敦桐：我光 C 就1個頭兩個大了</li>
<li>若○○：我說一個經驗談好了，asm 是最基礎的機械語言，而 c 語言是把 asm 語言做成很多的 marco 巨集處理出來的二階語言，而更高階的 c++ 和 c# 語言則是將 c + 標準涵式庫再做一次 macro 處理的三階語言，所以在處理 memory 上有極高效率與穩定的特性，因此複雜度會高許多，但是因為高階語言所能夠容納的標處理器是更多，因此更貼合人類語言，所以感覺比較好學一點，其實許多觀念會比 asm 來的複雜不簡單的特性，我本身的感覺是透過基本的機械語言和 c 能夠去更了解實體的高階語言可能會有一些不一樣的想法...</li>
<li>吳秉穎 還有一些程式範例是 屏科老師的 我去他網站抓的</li>
<li>若○○ http://programming.im.ncnu.edu.tw/Chapter9.htm</li>
<li>若○○ *(p+10) = 100; // 相當於x[10] = 100</li>
<li>劉○○ 恩Q_Q</li>
<li>若○○ 2 維就是 <em>(</em>(ptr))</li>
<li>若○○ 用成的就可以指過去</li>
<li>若○○ 問一個小問題喔... int a[10]，在 a[1] - a[2] 的 mem 區域是怎麼編排的?!是 int a[1] +  + a[2] 或是 a[1] + a[2] 無空隙?!還是 a[1] 的實際位址在 0x000001 而 a[2] 是在 0xffff00，而 int a[1] 裡面裝的到底是什麼?!0000 0000 0000 0000 ?!</li>
<li>李○○ 位置應該會連續吧 我指的是MMU來說 實體記憶體應該不一定會連續 裡面裝的值應該是亂碼嗎? 我有說錯嗎~~</li>
<li>陳鍾誠 是 a[1] + a[2] 無空隙</li>
<li>紀○○ 陣列是一段連續的記憶體a[1]-a[2]的位址距離是sizeof(int)的大小</li>
<li>陳鍾誠 只有字串才需要以  結尾，陣列是連續的空間。</li>
<li>陳鍾誠 對於有 MMU 的情況而言，在邏輯位址空間上仍然是連續的。但在實體位址空間就有可能有斷裂的情況。</li>
</ul>
<p>問題 3 :矩陣參數與回傳值問題 (續)</p>
<ul>
<li>吳秉穎：若再不用指標的方式將A[4][3]跟B[4][3]的兩個二維陣列傳到函數裡相加，也就是</li>
</ul>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="kw">for</span>(<span class="dt">int</span> i = <span class="dv">0</span> ; i &lt; <span class="dv">4</span> ; i++)
{
  <span class="kw">for</span>(<span class="dt">int</span> j = <span class="dv">0</span> ; j &lt; <span class="dv">3</span> ; j++)
  {
      D[i][j]=A[i][j]+B[i][j];
  }
}</code></pre>
<ul>
<li>我要如何將D陣列回傳到main裡，請問這方法可不可行。</li>
<li>若○○：int arr[10][10] main()...</li>
<li>吳秉穎：謝謝各位解說，所以如果我寫 void main(void) 這樣就無法接收回傳值對吧</li>
</ul>
<h3 id="筆者回覆與釐清"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#筆者回覆與釐清">筆者回覆與釐清</a></h3>
<p>許多 C 語言的學習者都會有同樣的問題，但是卻往往學了很久之後還是不知道答案，有時摸索了很久自己找出一個答案，卻不見得就是好的方法。</p>
<p>以上的問題大致可歸結為兩個，第一個是「陣列的參數傳遞問題」，第二個是「程式的模組化問題」。</p>
<p>首先讓我們解答「陣列的參數傳遞問題」。</p>
<p>標準 C 語言的參數傳遞，基本上只有兩種，一種是傳值的參數 (通常用在基本型態上)，另一種是傳遞位址的參數 (通常用在陣列或結構上)。</p>
<p>舉例而言，在下列程式當中，函數 max 的參數 a, b 都是傳遞值的參數。而函數 sum 的參數 len 仍然是傳值的參數，但 a 則是傳遞位址的參數。</p>
<p>檔案：param.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">int</span> max(<span class="dt">int</span> a, <span class="dt">int</span> b) {
    <span class="kw">if</span> (a &gt; b)
        <span class="kw">return</span> a;
    <span class="kw">else</span>
        <span class="kw">return</span> b;
}

<span class="dt">int</span> sum(<span class="dt">int</span> a[], <span class="dt">int</span> len) {
    <span class="dt">int</span> i, s=<span class="dv">0</span>;
    <span class="kw">for</span> (i=<span class="dv">0</span>; i&lt;len; i++) {
        s += a[i];
    }
    <span class="kw">return</span> s;
}

<span class="dt">int</span> main() {
    <span class="dt">int</span> x = <span class="dv">3</span>, y = <span class="dv">5</span>;
    <span class="dt">int</span> z = max(x, y);
    <span class="dt">int</span> array[] = { <span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>, <span class="dv">5</span>};
    <span class="dt">int</span> s = sum(array, <span class="dv">5</span>);
    printf(<span class="st">"x=%d y=%d z=%d s=%d</span><span class="ch">\n</span><span class="st">"</span>, x, y, z, s);
}</code></pre>
<p>執行結果：</p>
<pre><code>D:\Dropbox\Public\c&gt;gcc param.c -o param

D:\Dropbox\Public\c&gt;param
x=3 y=5 z=5 s=15</code></pre>
<p>對於傳值的參數，在傳遞時會複製一份該參數傳進函數，因此函數中的任何的修改都將不會影響到原來的正本， 因此下列程式中 modify(a) 函數呼叫後， a 的值仍然是 5，並不會改變。</p>
<p>檔案：modify1.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">int</span> modify(<span class="dt">int</span> x) {
    x += <span class="dv">3</span>;
}

<span class="dt">int</span> main() {
    <span class="dt">int</span> a = <span class="dv">5</span>;
    modify(a);
    printf(<span class="st">"a=%d</span><span class="ch">\n</span><span class="st">"</span>, a);
}</code></pre>
<p>執行結果：</p>
<pre><code>D:\Dropbox\Public\c&gt;gcc modify1.c -o modify1

D:\Dropbox\Public\c&gt;modify1
a=5</code></pre>
<p>但是對於傳遞位址的參數，如果我們採用類似的方法進行修改，那麼其內容將會被改變，因此下列程式中的 modify(a) 執行完之後，a[0] 的值將會變成 8。</p>
<p>檔案：modify2.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">int</span> modify(<span class="dt">int</span> x[]) {
    x[<span class="dv">0</span>] += <span class="dv">3</span>;
}

<span class="dt">int</span> main() {
    <span class="dt">int</span> a[] = { <span class="dv">5</span> };
    modify(a);
    printf(<span class="st">"a[0]=%d</span><span class="ch">\n</span><span class="st">"</span>, a[<span class="dv">0</span>]);
}</code></pre>
<p>執行結果：</p>
<pre><code>D:\Dropbox\Public\c&gt;gcc modify2.c -o modify2

D:\Dropbox\Public\c&gt;modify2
a[0]=8</code></pre>
<p>事實上、傳址參數也有進行參數複製後傳遞的動作，但複製的是「記憶體位址」，而非參數內容，假如上述程式中 a 的記憶體位址為 100， 那麼當 modify(a) 被呼叫時，會將 100 複製一份後傳給 x，因此當 x[0] +=3 執行的時候，事實上是將記憶體位址 100 的內容 5 取出，然後 加上 3 ，於是記憶體位址 100 的內容就變成了 8，因此在程式執行完之後，a[0] (也就是記憶體位址 100 的內容) 的值也就變成 8 了。</p>
<p>對於上述的程式，如果我們改成指標的寫法，那麼程式碼將改寫如下：</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">int</span> modify(<span class="dt">int</span> *x) {
    x[<span class="dv">0</span>] += <span class="dv">3</span>;
}

<span class="dt">int</span> main() {
    <span class="dt">int</span> a[] = { <span class="dv">5</span> };
    modify(a);
    printf(<span class="st">"a[0]=%d</span><span class="ch">\n</span><span class="st">"</span>, a[<span class="dv">0</span>]);
}</code></pre>
<p>執行結果：</p>
<pre><code>D:\Dropbox\Public\c&gt;gcc modify3.c -o modify3

D:\Dropbox\Public\c&gt;modify3
a[0]=8</code></pre>
<p>您可以看到這兩個版本，除了 int x[] 改為 int *x 之外，其餘的部分完全沒有改變，因為在 C 語言當中，陣列形態的參數事實上就是用 「位址」的方式傳遞的，而這也正是傳址參數的底層實作方式。</p>
<p>接著讓我們看看矩陣參數的傳遞問題，首先讓我們看看以下的二維陣列寫法。</p>
<p>檔案：matrix1.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="ot">#define ROWS 4</span>
<span class="ot">#define COLS 3</span>

<span class="dt">void</span> print(<span class="dt">char</span> *name, <span class="dt">double</span> M[ROWS][COLS]) {
    <span class="dt">int</span> i, j;
    <span class="kw">if</span> (name != NULL)
        printf(<span class="st">"================= %s ====================</span><span class="ch">\n</span><span class="st">"</span>, name);
    <span class="kw">for</span>(i = <span class="dv">0</span>; i &lt; ROWS; i++) {
        <span class="kw">for</span>(j = <span class="dv">0</span>; j &lt; COLS; j++) {
            printf(<span class="st">"%4.1f "</span>, M[i][j]);
        }
        printf(<span class="st">"</span><span class="ch">\n</span><span class="st">"</span>);       
    }
}

<span class="dt">void</span> add(<span class="dt">double</span> A[ROWS][COLS], <span class="dt">double</span> B[ROWS][COLS], <span class="dt">double</span> M[ROWS][COLS]) {
    <span class="dt">int</span> i, j;
    <span class="kw">for</span>(i = <span class="dv">0</span> ; i &lt; ROWS ; i++) {
        <span class="kw">for</span>(j = <span class="dv">0</span> ; j &lt; COLS ; j++) {
            M[i][j]=A[i][j]+B[i][j];
        }
    }
}

<span class="dt">int</span> main() {
    <span class="dt">double</span> X[ROWS][COLS] = { {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>} };
    <span class="dt">double</span> Y[ROWS][COLS] = { {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> Z[ROWS][COLS];
    
    add(X,Y,Z);
    print(<span class="st">"X"</span>, X);
    print(<span class="st">"Y"</span>, Y);
    print(<span class="st">"Z"</span>, Z);
}</code></pre>
<p>執行結果</p>
<pre><code>D:\Dropbox\Public\c\matrix&gt;gcc matrix1.c -o matrix1

D:\Dropbox\Public\c\matrix&gt;matrix1
================= X ====================
 1.0  2.0  3.0
 1.0  2.0  3.0
 1.0  2.0  3.0
 1.0  2.0  3.0
================= Y ====================
 1.0  1.0  1.0
 1.0  1.0  1.0
 1.0  1.0  1.0
 1.0  1.0  1.0
================= Z ====================
 2.0  3.0  4.0
 2.0  3.0  4.0
 2.0  3.0  4.0
 2.0  3.0  4.0</code></pre>
<p>您可以看到這樣的寫法感覺好像很正常，但事實上卻很沒有彈性，因為陣列大小都定死了，沒有辦法同時宣告 <code>4*3</code> 的陣列與 <code>3*5</code> 的陣列。</p>
<p>假如我們改用以下寫法，彈性就會大多了，因為可以宣告任意大小的二維陣列。</p>
<p>檔案：matrix2.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols) {
    <span class="dt">int</span> i, j;
    <span class="kw">if</span> (name != NULL)
        printf(<span class="st">"================= %s ====================</span><span class="ch">\n</span><span class="st">"</span>, name);
    <span class="kw">for</span>(i = <span class="dv">0</span>; i &lt; rows; i++) {
        <span class="kw">for</span>(j = <span class="dv">0</span>; j &lt; cols; j++) {
            printf(<span class="st">"%4.1f "</span>, M[i*cols+j]);
        }
        printf(<span class="st">"</span><span class="ch">\n</span><span class="st">"</span>);       
    }
}

<span class="dt">void</span> add(<span class="dt">double</span> *A, <span class="dt">double</span> *B, <span class="dt">double</span> *M, <span class="dt">int</span> size) {
    <span class="dt">int</span> i;
    <span class="kw">for</span>(i = <span class="dv">0</span> ; i &lt; size ; i++)
        M[i] = A[i] + B[i];
}

<span class="ot">#define matrixAdd(A, B, M, rows, cols) add(A, B, M, rows*cols)</span>

<span class="dt">int</span> main() {
    <span class="dt">double</span> X[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>} };
    <span class="dt">double</span> Y[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> Z[<span class="dv">4</span>][<span class="dv">3</span>];
    <span class="dt">double</span> *x = X[<span class="dv">0</span>], *y = Y[<span class="dv">0</span>], *z = Z[<span class="dv">0</span>];
    
    matrixAdd(x, y, z, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"X"</span>, x, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Y"</span>, y, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Z"</span>, z, <span class="dv">4</span>, <span class="dv">3</span>);

    <span class="dt">double</span> A[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>}, {<span class="dv">3</span>, <span class="dv">4</span>} };
    <span class="dt">double</span> B[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> C[<span class="dv">2</span>][<span class="dv">2</span>];
    <span class="dt">double</span> *a = A[<span class="dv">0</span>], *b = B[<span class="dv">0</span>], *c = C[<span class="dv">0</span>];
    
    matrixAdd(a, b, c, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"A"</span>, a, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"B"</span>, b, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"C"</span>, c, <span class="dv">2</span>, <span class="dv">2</span>);
}</code></pre>
<p>註：讀者可能會感覺到奇怪，為何我們用 <code>double *x = X[0]</code> 這樣的語法，筆者原本是寫成 <code>double *x = (double *) X</code> 這樣的方式， 但是這樣的語法在 gcc 中是正確的，但有人在 Visual C++ 當中編譯就錯了。而用 <code>double *x = X[0]</code> 這樣寫，因為 X 是二維陣列， X[0] 自然就是一維陣列，與 <code>double *x</code> 的形態相容，而且位址也對，所以就採用了這種寫法。</p>
<p>執行結果：</p>
<pre><code>D:\Dropbox\Public\c\matrix&gt;gcc matrix2.c -o matrix2

D:\Dropbox\Public\c\matrix&gt;matrix2
================= X ====================
 1.0  2.0  3.0
 1.0  2.0  3.0
 1.0  2.0  3.0
 1.0  2.0  3.0
================= Y ====================
 1.0  1.0  1.0
 1.0  1.0  1.0
 1.0  1.0  1.0
 1.0  1.0  1.0
================= Z ====================
 2.0  3.0  4.0
 2.0  3.0  4.0
 2.0  3.0  4.0
 2.0  3.0  4.0
================= A ====================
 1.0  2.0
 3.0  4.0
================= B ====================
 1.0  1.0
 1.0  1.0
================= C ====================
 2.0  3.0
 4.0  5.0</code></pre>
<p>現在我們應該已經回答完 C 語言參數的傳遞問題了，接著讓我們來回答第二個問題，也就是 C 語言的模組化問題。</p>
<p>針對以上程式，我們通常不應該將主程式與矩陣函數撰寫在同一個檔案裏面，因此我們可以分開成兩個檔案：main.c 與 matrix.c 如下所示：</p>
<p>檔案：matrix.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols) {
    <span class="dt">int</span> i, j;
    <span class="kw">if</span> (name != NULL)
        printf(<span class="st">"================= %s ====================</span><span class="ch">\n</span><span class="st">"</span>, name);
    <span class="kw">for</span>(i = <span class="dv">0</span>; i &lt; rows; i++) {
        <span class="kw">for</span>(j = <span class="dv">0</span>; j &lt; cols; j++) {
            printf(<span class="st">"%4.1f "</span>, M[i*cols+j]);
        }
        printf(<span class="st">"</span><span class="ch">\n</span><span class="st">"</span>);       
    }
}

<span class="dt">void</span> add(<span class="dt">double</span> *A, <span class="dt">double</span> *B, <span class="dt">double</span> *M, <span class="dt">int</span> size) {
    <span class="dt">int</span> i;
    <span class="kw">for</span>(i = <span class="dv">0</span> ; i &lt; size ; i++)
        M[i] = A[i] + B[i];
}

<span class="ot">#define matrixAdd(A, B, M, rows, cols) add(A, B, M, rows*cols)</span></code></pre>
<p>檔案：main.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>
<span class="ot">#include "matrix.c"</span>

<span class="dt">int</span> main() {
    <span class="dt">double</span> X[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>} };
    <span class="dt">double</span> Y[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> Z[<span class="dv">4</span>][<span class="dv">3</span>];
    <span class="dt">double</span> *x = X[<span class="dv">0</span>], *y = Y[<span class="dv">0</span>], *z = Z[<span class="dv">0</span>];
    
    matrixAdd(x, y, z, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"X"</span>, x, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Y"</span>, y, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Z"</span>, z, <span class="dv">4</span>, <span class="dv">3</span>);

    <span class="dt">double</span> A[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>}, {<span class="dv">3</span>, <span class="dv">4</span>} };
    <span class="dt">double</span> B[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> C[<span class="dv">2</span>][<span class="dv">2</span>];
    <span class="dt">double</span> *a = A[<span class="dv">0</span>], *b = B[<span class="dv">0</span>], *c = C[<span class="dv">0</span>];
    
    matrixAdd(a, b, c, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"A"</span>, a, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"B"</span>, b, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"C"</span>, c, <span class="dv">2</span>, <span class="dv">2</span>);
}</code></pre>
<p>編譯時您只要將兩個檔案放在同一個資料夾，就可以用下列指令編譯完成後執行，執行結果仍然與原本一樣。</p>
<pre><code>gcc main.c -o matrix

matrix</code></pre>
<p>雖然以上的方式已經可以「分開撰寫、合併編譯」，但是仍然有一些缺陷，那就是每次要使用矩陣函式庫時， 都要用 <code>#include "matrix.c"</code> 指令將整個 matrix.c 引入並且重新編譯，這樣作會造成編譯速度緩慢的問題， 因此若要加快速度，可以將 matrix.c 先行編譯為目的檔 matrix.o，然後再將 matrix.c 當中的函數原型抽取 出來獨立成一個檔案 matrix.h，這樣不用每次都勞動編譯器重新編譯 matrix.c 檔，而且可以讓編譯器將 main.c matrix.h matrix.o 等檔案順利編譯連結成執行檔。</p>
<p>因此我們可以將上述程式改寫如下。</p>
<p>檔案：matrix.h</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#define matrixAdd(A, B, M, rows, cols) add(A, B, M, rows*cols)</span>

<span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols);
<span class="dt">void</span> add(<span class="dt">double</span> *A, <span class="dt">double</span> *B, <span class="dt">double</span> *M, <span class="dt">int</span> size);</code></pre>
<p>檔案：matrix.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>
<span class="ot">#include "matrix.h"</span>

<span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols) {
    <span class="dt">int</span> i, j;
    <span class="kw">if</span> (name != NULL)
        printf(<span class="st">"================= %s ====================</span><span class="ch">\n</span><span class="st">"</span>, name);
    <span class="kw">for</span>(i = <span class="dv">0</span>; i &lt; rows; i++) {
        <span class="kw">for</span>(j = <span class="dv">0</span>; j &lt; cols; j++) {
            printf(<span class="st">"%4.1f "</span>, M[i*cols+j]);
        }
        printf(<span class="st">"</span><span class="ch">\n</span><span class="st">"</span>);       
    }
}

<span class="dt">void</span> add(<span class="dt">double</span> *A, <span class="dt">double</span> *B, <span class="dt">double</span> *M, <span class="dt">int</span> size) {
    <span class="dt">int</span> i;
    <span class="kw">for</span>(i = <span class="dv">0</span> ; i &lt; size ; i++)
        M[i] = A[i] + B[i];
}</code></pre>
<p>檔案：main.c</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>
<span class="ot">#include "matrix.h"</span>

<span class="dt">int</span> main() {
    <span class="dt">double</span> X[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>}, {<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>} };
    <span class="dt">double</span> Y[<span class="dv">4</span>][<span class="dv">3</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> Z[<span class="dv">4</span>][<span class="dv">3</span>];
    <span class="dt">double</span> *x = X[<span class="dv">0</span>], *y = Y[<span class="dv">0</span>], *z = Z[<span class="dv">0</span>];
    
    matrixAdd(x, y, z, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"X"</span>, x, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Y"</span>, y, <span class="dv">4</span>, <span class="dv">3</span>);
    matrixPrint(<span class="st">"Z"</span>, z, <span class="dv">4</span>, <span class="dv">3</span>);

    <span class="dt">double</span> A[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">2</span>}, {<span class="dv">3</span>, <span class="dv">4</span>} };
    <span class="dt">double</span> B[<span class="dv">2</span>][<span class="dv">2</span>] = { {<span class="dv">1</span>, <span class="dv">1</span>}, {<span class="dv">1</span>, <span class="dv">1</span>} };
    <span class="dt">double</span> C[<span class="dv">2</span>][<span class="dv">2</span>];
    <span class="dt">double</span> *a = A[<span class="dv">0</span>], *b = B[<span class="dv">0</span>], *c = C[<span class="dv">0</span>];
    
    matrixAdd(a, b, c, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"A"</span>, a, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"B"</span>, b, <span class="dv">2</span>, <span class="dv">2</span>);
    matrixPrint(<span class="st">"C"</span>, c, <span class="dv">2</span>, <span class="dv">2</span>);
}</code></pre>
<p>然後用下列指令編譯並執行 (其中的 -c 參數用來告訴編譯器只要編譯成目的檔就好，不需要進一步連結成執行檔)。</p>
<pre><code>gcc -c matrix.c -o matrix.o

gcc main.c matrix.o -o main

main</code></pre>
<p>但是上述程式可能還會引起一些小問題，因為有些編譯器可能會對重複引用的行為產生警告或編譯錯誤的形況， 因此最好再加上引用防護，將 matrix.h 改寫如下。</p>
<p>檔案：matrix.h</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#ifndef __MATRIX_H__</span>
<span class="ot">#define __MATRIX_H__</span>

<span class="ot">#define matrixAdd(A, B, M, rows, cols) add(A, B, M, rows*cols)</span>

<span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols);
<span class="dt">void</span> add(<span class="dt">double</span> *A, <span class="dt">double</span> *B, <span class="dt">double</span> *M, <span class="dt">int</span> size);

<span class="ot">#endif</span></code></pre>
<p>如此就完成了將矩陣函數模組化的動作，事先將 matrix.c 編譯成目的檔 matrix.o，以縮短編譯時間，並且方便 使用者引用。</p>
<p>當然、如果您有很多模組，分別都編譯成目的檔，最好還是用 ar 指令將這些目的合併成函式庫，這樣就不用每次編譯 都要引用一大堆目的檔，只要引用對應的函式庫就可以了。</p>
<h3 id="結語"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#結語">結語</a></h3>
<p>對於初學 C 語言的朋友們而言，參數傳遞的誤解與型態的混淆是很常見的問題，不會使用 *.h 或撰寫引用防護也是很正常的事情。 C 語言是一個很困難的語言 (事實上、C 語言是筆者所學過的語言當中，我認為最困難的一個。不過最近發現 JavaScript 這個語言 有後來居上的趨勢 -- 或者說有些語法更不容易理解)，所以初學者在學習 C 語言時感到困難是很正常的事情。</p>
<p>我還記得自己在先前寫的一份網誌電子書上寫下了這一段話，在此與讀者分享：</p>
<blockquote>
<p>當我還是一個大學生的時候，總覺得 C 語言就是這樣了。但是在 10 年後我進入職場時，才發現原來我並不太認識這個語言。產業界所使用的 C 語言有許多是大學所沒有教授過的，像是 #ifdef、make、GNU 工具等等。又過了 10 年，當我研究嵌入式系統時，這個感覺又出現了，我仍然不太認識 C 語言，嵌入式系統中所使用的「記憶體映射輸出入、volatile、組合語言連接、Link Script」等，又讓我耳目一新，我再度重新認識了 C 語言一次。然後，當我研讀 Linux 核心的程式碼時，看到 Torvalds 所使用的「鏈結串列、行程切換技巧」等，又再度讓我大為驚訝，C 語言竟然還可以這樣用。然後，當我開始研究 Google Android 手機平台的架構時，又看到了如何用 C 語言架構出網路、視窗、遊戲、瀏覽器等架構，於是我必須再度學習一次 C 語言。</p>
<p>當我翻閱坊間的書籍時，不禁如此想著，如果有人能直接告訴我這些 C 語言的學習歷程，那應該有多好。難道，我們真的必需花上數十年的時間去學習 C 語言，才能得到這些知識嗎？這些知識在初學者的眼中，看來簡直像是「奇技淫巧」。然而這些「奇技淫巧」，正是 C 語言為何如此強大的原因，我希望能透過這本書，告訴各位這些「奇技淫巧」，讓各位讀者不需要再像我一樣，花上二十年功夫，才能學會這些技術。</p>
<p>在我的眼中，C 語言就像一把鋒利的雙面刃，初出茅廬的人往往功力不夠深厚，反而將這個神兵利器往自己身上砍，因而身受重傷。但是在專家的手中，C 語言卻具有無比的威力，這種神兵利器具有「十年磨一劍、十步殺一人」的驚人力量。筆者希望能透過這本書，讓讀者能夠充分發揮 C 語言的力量，快速的掌握這個難以駕馭的神兵利器。</p>
</blockquote>
<h3 id="參考文獻-3"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻-3">參考文獻</a></h3>
<ul>
<li>免費電子書：高等 C 語言(專業限定版) -- <a href="http://ccckmit.wikidot.com/cp:main">http://ccckmit.wikidot.com/cp:main</a></li>
</ul>
<h3 id="補充"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#補充">補充</a></h3>
<p>在本文預覽版刊出之後，柏諺兄在 <a href="https://www.facebook.com/groups/programmerMagazine/">程式人雜誌社團</a> 當中寫了一段精準的解說，於是我將這段解說放在這裏，作為補充：</p>
<p>在 C 語言裡面沒有 "傳遞陣列" 給函式的概念, 一直都是 call by value.</p>
<h4 id="預備知識"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#預備知識">預備知識</a></h4>
<p>當你在將 陣列名稱 傳遞給函式或是拿去作數值運算([], +)時, 你的運算元實際上是 "第一個元素的位址值", 我們在語言裡稱它為 decay(退化). 陣列不是指標, 但能夠退化成指標.</p>
<p>在 C/C++ 中型別是很重要的, 例如陣列 int array[ 2 ][ 3 ]: (array) 的數值跟 array[ 0 ]、&amp;array[ 0 ][ 0 ] 一樣, 但是他們各自擁有不同的型別, 在運算上的差異甚大. 若以 "數值" 來理解這個語言那麼有可能在撰寫跨平台程式時產生非預期的bugs.</p>
<p>陣列和函式的型態跟一般內建型態不同, 是在變數的左右兩側, 例如一維陣列: int array[ 10 ], array 自己本身的型態是 int[ 10 ], 而成員型態則是 int; 二維陣列: int matrix[ 4 ][ 3 ], matrix 本身的型態是 int[ 4 ][ 3 ], 成員型態則是 int[ 3 ] (所代表的意義是: matrix 是一個 int[ 3 ] 陣列, 大小為 4 )</p>
<p>有這樣的理解我們就可以看懂更複雜的語法:</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">int</span> add( <span class="dt">int</span>, <span class="dt">int</span> ), abs( <span class="dt">int</span> );</code></pre>
<p>上面程式碼是在 "宣告" 兩個函式: 1) 第一個是 add(), 有兩個 int 參數, 回傳值型態是 int 2) 第二個是 abs(), 只有一個 int 參數, 回傳值型態是 int</p>
<p>因為宣告時每個名稱能夠共用的只有型態的左邊部分, 但是右邊部分無法共用所以必須分開寫.</p>
<h4 id="本文開始"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#本文開始">本文開始</a></h4>
<p>在範例中的函式宣告(a):</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">void</span> print(<span class="dt">char</span> *name, <span class="dt">double</span> M[ROWS][COLS]);</code></pre>
<p>有的人說 "最高維可以忽略", 所以延伸了第二種宣告方式(b):</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">void</span> print(<span class="dt">char</span> *name, <span class="dt">double</span> M[][COLS]);</code></pre>
<p>但最正確的宣告則是第三種(c):</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">void</span> print(<span class="dt">char</span> *name, <span class="dt">double</span> (*M)[COLS]);</code></pre>
<p>三者被 名稱修飾(Name Mangling) 出來的結果是一樣的, 但是你卻無法傳遞 int[ ROWS+1 ][ COLS ] 給 (a) --- 因為撰碼的人在宣告的地方自己加上最高維的限制使然.</p>
<p>當叫用 print( "Y", Y ) 時, Y 會被 decay(退化) 成指標, 因為 Y 的型態是 double[ROWS][COLS], 它的成員型態是 double[COLS], 那麼第一個元素的位址型態就是 double(*)[COLS] 所以我們參數應該寫成 (c) 而不是其它兩種. 一樣的概念適用在任何維度的陣列.</p>
<p>在 print() 內可以直接使用 M[ i ][ j ] 的語法來存取成員, M[ i ] 是對傳進來的連續 double[COLS] 中取第 i 個小陣列, [ j ] 則是拿出小陣列的第 j 個值, 想要達到陣列 slice 也不無可能.</p>
<p>用不適當的方法去傳遞多維陣列導致 M[i*cols+j] 這寫法反而有可能拖慢間接位址計算的速度.</p>
<p>順帶一提下面的宣告:</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="dt">void</span> matrixPrint(<span class="dt">char</span> *name, <span class="dt">double</span> *M, <span class="dt">int</span> rows, <span class="dt">int</span> cols); </code></pre>
<p>語意上是 "給予一塊連續的 double 記憶體, 並且用額外的必要資訊 rows, cols 來存取該記憶體". 這邊我們看到的就只剩數個 double 小個體而不是整體概念 "矩陣", 所以傳遞的時候最好用 struct 包裝起來 "語意" 才會一樣.</p>
<h2 id="軟體工程討論-cmmiagile-與scrum"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#軟體工程討論-cmmiagile-與scrum">軟體工程討論 – CMMI、Agile 與Scrum</a></h2>
<p>4 月 10 日的一個討論帖，引發了網友們關於軟體工程的熱烈討論，您可以在下列連結當中看該討論帖，瞭解更完整的訊息：</p>
<ul>
<li><a href="https://www.facebook.com/groups/programmerMagazine/permalink/627424190607634/">https://www.facebook.com/groups/programmerMagazine/permalink/627424190607634/</a></li>
</ul>
<p>經過這個討論，以及軟工專家 TML 的指點之後，我大致上歸納出了以下幾點心得：</p>
<ol style="list-style-type: decimal">
<li>CMMI 是 Capability Maturity Model Integration (能力成熟度整合模型) 的英文縮寫，感覺有點像資訊領域的 ISO 9001，規定了軟體公司需要撰寫哪些文件。 CMMI 的認證共有五種等級，分別是 (1). 啟動 (initial) (2). 已管理 (Managed) (3). 已定義 (Defined) (4). 已量化地管理 (Quantitively Managed) (5). 最佳化中 (Optimizing)，如下圖所示：</li>
</ol>
<div class="figure">
<img src="./pmag201305_files/Characteristics_of_Capability_Maturity_Model.svg.png" alt="CMMI 的五種成熟度等級"><p class="caption">CMMI 的五種成熟度等級</p>
</div>
<ol start="2" style="list-style-type: decimal">
<li>而 Agile (敏捷軟體開發) 則是一種「軟體工程」的精神，主要強調「較短的開發循環」，以及「漸進式開發與交付」，也就是採用較為彈性的一種軟體工程方法，其價值觀如下：
<ul>
<li>個人與互動 重於 流程與工具</li>
<li>可用的軟體 重於 詳盡的文件</li>
<li>與客戶合作 重於 合約協商</li>
<li>回應變化 重於 遵循計劃</li>
</ul>
<p>在傳統的軟體工程分類上，通常將開發模式分類為「瀑布模式」與「螺旋模式」兩種，感覺上敏捷軟體開發有點像「螺旋模式」，但是強調的面向卻有所不同。</p></li>
<li><p>敏捷開發既然是一種精神，於是根據這種精神衍生出了一大群軟體工程方法，其中較廣為人知的幾種是 Scrum 、「極限編程」(XP Extreme Programming)、 Lean Software Development、AUP（Agile Unified Process）等軟體工程方法。</p></li>
</ol>
<p>根據 TML 的說法，CMMI 與敏捷開發並不會互相衝突，CMMI 沒有強調工法，只要求最適合工法(process)，所以瀑布式是工法，agile 也是工法。至於 CMMI 的重點是記錄下工法的過程，如果好下次要沿用，不好下次改進，CMMI 是一個 process improvement 的框架！</p>
<p>很多 CMMI level 5 的公司也有引進 scrum 甚至 pair programming 等等當做其中的一個 process，因此兩者並不會互相衝突，舉例而言： PMI-Agile 的作法 就非常的嚴謹，而 Scrum 也在很多大公司被採用，Agile 絕對不是一種隨便修改軟體規格的方法。</p>
<h3 id="參考文獻-4"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻-4">參考文獻</a></h3>
<ul>
<li><a href="http://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91">維基百科:敏捷軟體開發</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E6%9E%81%E9%99%90%E7%BC%96%E7%A8%8B">維基百科:极限编程</a></li>
<li><a href="http://zh.wikipedia.org/zh-hant/Scrum">維基百科:Scrum</a></li>
</ul>
<p>以下是 TML 所提供的一些參考資料，</p>
<ul>
<li><a href="http://www.gss.com.tw/index.php/eis/239">軟體工程與CMMI</a></li>
<li><a href="http://wiki.mbalib.com/zh-tw/CMMI">CMMI - MBA智库百科</a></li>
<li><a href="http://www.infoq.com/cn/agile">敏捷社区的所有内容</a></li>
<li><a href="http://www.dotblogs.com.tw/hatelove/archive/2011/12/25/introducing-continuous-integration.aspx">軟體工程:持續整合 (Continuous integration, CI) 簡介 - In 91- 點部落</a></li>
<li><a href="http://blog.toright.com/archives/600">Continuous Integration 【持續整合】與 Nightly Build【每日建置】+ Hudson 介紹 « Soul &amp; Shell Blog</a></li>
</ul>
<h2 id="javascript-討論-繼承的實作方法"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#javascript-討論-繼承的實作方法">JavaScript 討論 – 繼承的實作方法</a></h2>
<p>4 月 12 日，筆者在查詢 JavaScript 的繼承實作方法時，發了一個討論帖，網址如下：</p>
<ul>
<li><a href="https://www.facebook.com/groups/programmerMagazine/permalink/628184417198278/">https://www.facebook.com/groups/programmerMagazine/permalink/628184417198278/</a></li>
</ul>
<p>令筆者驚訝的是，「良格葛」也來了，並且提供了很棒的文章！</p>
<h3 id="討論內容"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#討論內容">討論內容</a></h3>
<p>由於筆者在網路上看到的 JavaScript 繼承方法每個人都寫得不一樣，因此發了以下訊息：</p>
<blockquote>
<p>javascript 的繼承好怪阿！越看越覺得不懂。</p>
<ul>
<li><a href="http://ccckmit.wikidot.com/js:inheritance">http://ccckmit.wikidot.com/js:inheritance</a></li>
<li><a href="http://howtonode.org/prototypical-inheritance">http://howtonode.org/prototypical-inheritance</a></li>
<li><a href="http://stackoverflow.com/questions/7486825/javascript-inheritance">http://stackoverflow.com/questions/7486825/javascript-inheritance</a></li>
<li><a href="http://stackoverflow.com/questions/10357033/javascript-object-inheritance">http://stackoverflow.com/questions/10357033/javascript-object-inheritance</a></li>
<li><a href="http://www.crockford.com/javascript/inheritance.html">http://www.crockford.com/javascript/inheritance.html</a></li>
<li><a href="http://phrogz.net/JS/classes/OOPinJS2.html">http://phrogz.net/JS/classes/OOPinJS2.html</a></li>
<li><a href="http://www.cnblogs.com/5201314/archive/2009/05/22/1487213.html">http://www.cnblogs.com/5201314/archive/2009/05/22/1487213.html</a></li>
</ul>
<p>沒有人寫得一樣的???</p>
</blockquote>
<p>因而引來了以下的討論 (摘錄)：</p>
<ul>
<li>馮○○：Javascript內建的機制是prototype + constructor...不過物件的生成很自由，所以不一定非得這樣才能做出繼承的效果。</li>
<li>...</li>
<li>陳鍾誠 不過這種超強彈性我真的很喜歡！</li>
<li>陳鍾誠 就軟體工程的控制角度來看，這種設計可能會造成專案控管的很多問題，但是就程式語言的角度看，這種設計卻很彈性、自由且具有吸引力。</li>
<li>良格葛：JavaScript 的 prototype-based 特性，使得繼承的實現方式可以很多元化，主要還是得看需求為何？包括對建構式的需求、對檢驗物件的需求、對類別封裝的需求、想模擬哪種語言的外觀（像是有些程式庫是特地為熟悉 Java 的人而設計的，它們對繼承的模擬就會看來很像 Java）..., 唯一要記得的就是函式的 prototype 機制，實作的方式就因人而異了…</li>
<li>良格葛：<a href="http://openhome.cc/Gossip/JavaScript/Prototype.html">http://openhome.cc/Gossip/JavaScript/Prototype.html</a> 最後選用哪種實現機制，就是大家來討論統一，選定後就遵守，避免另行設計一套繼承模型…</li>
<li>良格葛：其實不只繼承，模擬任何 Class-based 機制，也都會有各種實現方式，即使是建構式也會有不止一種實現方式
<ul>
<li><a href="http://openhome.cc/Gossip/JavaScript/Constructor.html">http://openhome.cc/Gossip/JavaScript/Constructor.html</a></li>
<li><a href="http://openhome.cc/Gossip/JavaScript/Prototype.html">http://openhome.cc/Gossip/JavaScript/Prototype.html</a></li>
<li><a href="http://openhome.cc/Gossip/JavaScript/InspectObject.html">http://openhome.cc/Gossip/JavaScript/InspectObject.html</a></li>
<li><a href="http://openhome.cc/Gossip/JavaScript/ClassSimulation.html">http://openhome.cc/Gossip/JavaScript/ClassSimulation.html</a></li>
</ul></li>
<li>陳鍾誠：良葛格兄的文章好讚！</li>
<li>良葛格：以版主的實現為例，最後會在 Student 的實例上新增一個 prototype 特性，而不是使用 Student 函式的 prototype 特性，這不能說對或錯，要看版主的目的而定，只是最後要讓使用的人也遵守這個模型。</li>
</ul>
<p>例如有個人用另一種方式，在 Person 的 prototype 特性上新增 doSomething：</p>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="ot">Person</span>.<span class="ot">prototype</span>.<span class="fu">doSomething</span> = <span class="kw">function</span>(param) {
　...
};</code></pre>
<p>那麼最後的 tony 參考的實例，會不會有 doSomething 方法呢？我想是不會的，只會得到一個 undefined，那麼那位使用者要怎麼擴充呢？他要打開 Person 加入：</p>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="kw">function</span> <span class="fu">Person</span>(name, age) {
　<span class="ot">this</span>.<span class="fu">name</span> = name;
　<span class="ot">this</span>.<span class="fu">age</span> = age;
　<span class="ot">this</span>.<span class="fu">toStr</span> = <span class="kw">function</span>() { 
　　return <span class="st">"Person:name="</span>+<span class="kw">this</span>.<span class="fu">name</span>+<span class="st">" age="</span>+<span class="kw">this</span>.<span class="fu">age</span>; 
　}
　<span class="ot">this</span>.<span class="fu">doSomething</span> = <span class="kw">function</span>(param) {
　　…
　};
}</code></pre>
<p>那麼在這個程式中，你是否允許他這麼作？就是一個考量了！如果不允許，也不希望他用 Person.prototype.doSomething 隨意擴充，那版主的設計就是可行的…</p>
<p>結論就是還是看需求…XD</p>
<ul>
<li>陳鍾誠：瞭解，這就是 「多元化」的 JavaScript ！</li>
<li>陳鍾誠：似乎使用 「prototype + constructor+動態新增成員」 比較能精確抓到 javascript 物件的特性。</li>
<li>良葛格：一般來說，原型的目的是訴求自由度與實例的自我學習，原型若模彷類別通常是（約定要）放棄某些自由性，是一種慣例約束方式…
<ul>
<li>程式語言的特性本質（二）類別與原型的物件管理學 -- <a href="http://openhome.cc/Gossip/Programmer/ClassPrototypeBased.html">http://openhome.cc/Gossip/Programmer/ClassPrototypeBased.html</a></li>
</ul></li>
</ul>
<h3 id="筆者心得"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#筆者心得">筆者心得</a></h3>
<p>最近筆者用 Node.js + JavaScript 重寫開放電腦計畫的「編譯器、虛擬機、組譯器」等程式，發現可以比用比 C 語言短三倍的程式碼寫出相同的功能， 這讓筆者感覺到 JavaScript 真的是令人驚艷的一種語言，語法簡單卻彈性十足，筆者深深的被 JavaScript 所吸引了！</p>
<h1 id="程式人文集"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式人文集">程式人文集</a></h1>
<h2 id="arduino入門教學5-多顆-led-的控制-作者copper-maa"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#arduino入門教學5-多顆-led-的控制-作者copper-maa">Arduino入門教學(5) – 多顆 LED 的控制 (作者：Copper Maa)</a></h2>
<h3 id="實驗lab5-led-bar-graph"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#實驗lab5-led-bar-graph">實驗：Lab5 LED Bar Graph</a></h3>
<p>控制 LED 燈排 (LED Bar Graph)，製作出類似「霹靂遊俠」影集中「夥計」車頭 LED 燈排的掃瞄效果。LED Bar Graph 適合當作電池電量或音量之類的指示燈，其外觀如下：</p>
<h3 id="材料"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#材料">材料</a></h3>
<p>麵包板 x 1 Arduino 主板 x 1 LED bar garph x 1 或是 LED x 10 220 ohm 電阻 x 10 單心線 x N 接線</p>
<p>把 LED bar graph 或 10 顆 LED 接到 pin2 到 pin11 腳 。LED 的接法為: 長腳(陽極)接到 pin 腳，短腳(陰極)串接一顆 220 ohm 電阻接到 GND</p>
<h3 id="電路圖"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#電路圖">電路圖</a></h3>
<div class="figure">
<img src="./pmag201305_files/arduino_ledbargraph_board.png">
</div>
<h3 id="程式碼-ledbargraph.pde"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式碼-ledbargraph.pde">程式碼: LEDBarGraph.pde</a></h3>
<pre class="sourceCode CPP"><code class="sourceCode cpp">
<span class="co">// these constants won't change:</span>
<span class="dt">const</span> <span class="dt">int</span> ledCount = <span class="dv">10</span>;    <span class="co">// the number of LEDs in the bar graph</span>

<span class="dt">int</span> ledPins[] = { 
  <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>, <span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">7</span>,<span class="dv">8</span>,<span class="dv">9</span>,<span class="dv">10</span>,<span class="dv">11</span> };   <span class="co">// an array of pin numbers to which LEDs are attached</span>

<span class="dt">void</span> setup() {
  <span class="co">// loop over the pin array and set them all to output:</span>
  <span class="kw">for</span> (<span class="dt">int</span> thisLed = <span class="dv">0</span>; thisLed &lt; ledCount; thisLed++) {
    pinMode(ledPins[thisLed], OUTPUT); 
  }
}

<span class="dt">void</span> loop() {
  <span class="co">// loop over the LED array</span>
  <span class="co">// Go from right to left</span>
  <span class="kw">for</span> (<span class="dt">int</span> thisLed = <span class="dv">0</span>; thisLed &lt; ledCount; thisLed++) {
    digitalWrite(ledPins[thisLed], HIGH);
    delay(<span class="dv">60</span>);
    digitalWrite(ledPins[thisLed], LOW);
  }
  
  <span class="co">// And from left to right again</span>
  <span class="kw">for</span> (<span class="dt">int</span> thisLed = ledCount -<span class="dv">1</span> ; thisLed &gt;= <span class="dv">0</span>; thisLed--) {
    digitalWrite(ledPins[thisLed], HIGH);
    delay(<span class="dv">60</span>);
    
    <span class="kw">if</span> (thisLed == <span class="dv">0</span>) {
      <span class="co">// 跑完一輪後&amp;#65292;讓第一顆 LED 亮著暫停一下</span>
      delay(<span class="dv">200</span>); 
    } <span class="kw">else</span> {
      digitalWrite(ledPins[thisLed], LOW);
    }
  } 
}</code></pre>
<h3 id="說明"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#說明">說明：</a></h3>
<ul>
<li>L04: 宣告 ledPins 陣列並定義 LED bar 或 10 顆 LED 所在的腳位，在此使用 pin2 到 pin11 這 10 支腳位</li>
<li>L17~L20: 讓 LED 產生掃瞄的效果，先由右往左</li>
<li>L23~L33: 繼續讓 LED 產生掃瞄的效果，這次換成由左往右。跑完一輪後(先由右往左，再由左往右，這樣算一輪)，不關閉第一顆 LED 燈號，讓第一顆 LED 暫停一下</li>
</ul>
<h3 id="動動腦"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#動動腦">動動腦</a></h3>
<p>接上一顆可變電阻，利用可變電阻來控制 LED bar graph。提醒：使用 analogRead() 讀進來的可變電阻數值介於 0 到 1023，程式的邏輯可以這樣寫：介於 0 – 99 就開第一顆 LED、介於 100 – 199 開第二顆 LED、介於 200 – 299 開第三顆…，也可以先利用 map() 函式將 0 到 1023 的數值對應為 0 到 9 之間的數值，然後再決定開哪些 LED。</p>
<h3 id="範例照片影片"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#範例照片影片">範例照片／影片</a></h3>
<ul>
<li><a href="http://www.youtube.com/watch?feature=player_embedded&v=WVo6byx7LK8">http://www.youtube.com/watch?feature=player_embedded&amp;v=WVo6byx7LK8</a></li>
</ul>
<h3 id="延伸閱讀"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#延伸閱讀">延伸閱讀</a></h3>
<ul>
<li>LED 10-bar array -- <a href="http://www.sqlskills.com/blogs/paulselec/post/Arduino-projects-LED-10-bar-array.aspx">http://www.sqlskills.com/blogs/paulselec/post/Arduino-projects-LED-10-bar-array.aspx</a></li>
</ul>
<p>【本文作者為馬萬圳，原文網址為： <a href="http://coopermaa2nd.blogspot.tw/2010/12/arduino-lab5-led-bar-graph.html">http://coopermaa2nd.blogspot.tw/2010/12/arduino-lab5-led-bar-graph.html</a> ，由陳鍾誠編輯後納入本雜誌】</p>
<h2 id="javascript-5-在互動網頁中的應用以-html-編輯器為例-作者陳鍾誠"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#javascript-5-在互動網頁中的應用以-html-編輯器為例-作者陳鍾誠">JavaScript (5) – 在互動網頁中的應用，以 HTML 編輯器為例 (作者：陳鍾誠)</a></h2>
<p>在本文當中，我們將透過 JavaScript 設計一個 HTML 編輯器，讓您可以直接在瀏覽器當中看到 HTML 網頁的呈現結果， 筆者認為這個範例對學習動態網頁設計是一個非常簡單、卻又很有啟發性的程式。因為他很明顯的展現了動態網頁的原理。</p>
<h3 id="html-編輯器"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#html-編輯器">HTML 編輯器</a></h3>
<p>以下是該 HTML 編輯器的執行結果，當我們在 CSS 與 HTML 區塊輸入對應的原始碼之後，就可以按下「→」按鈕，然後在 呈現的 <code>&lt;div id="showbox" ...&lt;/div&gt;</code> 區塊看到兩者搭配時的呈現結果。</p>
<div class="figure">
<img src="./pmag201305_files/HtmlEditorRun.jpg" alt="HTML 編輯器的執行畫面"><p class="caption">HTML 編輯器的執行畫面</p>
</div>
<p>您也可以點選下列連結以實際檢視該網頁：</p>
<ul>
<li>HTML 編輯器：<a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/code/HtmlEditor.htm">https://dl.dropboxusercontent.com/u/101584453/pmag/201305/code/HtmlEditor.htm</a></li>
</ul>
<p>以下是這個網頁的原始 HTML 程式碼，其中有兩大段是我們預設填入的 CSS 與 HTML 原始碼，這兩段原則上可以去掉，但是 為了測試方便起見，我們就留在檔案中，請讀者閱讀的時候仔細區分之。</p>
<pre class="sourceCode html"><code class="sourceCode html"><span class="kw">&lt;html&gt;</span>
<span class="kw">&lt;style&gt;</span>
textarea, <span class="fl">#showbox</span> <span class="kw">{</span> <span class="kw">border:</span> <span class="dt">1px</span> <span class="dt">solid</span> <span class="dt">#9f9f9f</span><span class="kw">;</span> <span class="kw">}</span>
<span class="kw">&lt;/style&gt;</span>
<span class="kw">&lt;style</span><span class="ot"> id=</span><span class="st">"showboxstyle"</span><span class="kw">&gt;</span>
<span class="kw">&lt;/style&gt;</span>
<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">"text/javascript"</span><span class="kw">&gt;</span>
<span class="er">function convert() {</span>
<span class="er">  var cssbox  = document.getElementById("cssbox");</span>
<span class="er">  var editbox = document.getElementById("editbox");</span>
<span class="er">  var showbox = document.getElementById("showbox");</span>
<span class="er">  var showboxstyle = document.getElementById("showboxstyle");</span>
  <span class="ot">showbox</span>.<span class="fu">innerHTML</span> = <span class="ot">editbox</span>.<span class="fu">value</span>;
  <span class="ot">showboxstyle</span>.<span class="fu">innerHTML</span> = <span class="ot">cssbox</span>.<span class="fu">value</span>;
}
<span class="kw">&lt;/script&gt;</span>   
<span class="kw">&lt;body&gt;</span>
<span class="kw">&lt;form&gt;</span>
<span class="kw">&lt;table</span><span class="ot"> width=</span><span class="st">"95%"</span><span class="ot"> style=</span><span class="st">"border-collapse: collapse; border: 0px;"</span><span class="kw">&gt;&lt;tr&gt;</span>
<span class="kw">&lt;tr&gt;&lt;td</span><span class="ot"> colspan=</span><span class="st">"2"</span><span class="ot"> style=</span><span class="st">"text-align:center"</span><span class="kw">&gt;</span>HTML 原始碼　　<span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"button"</span><span class="ot"> value=</span><span class="st">" → "</span><span class="ot"> onclick=</span><span class="st">"JavaScript:convert()"</span><span class="kw">/&gt;</span>　　　顯示結果<span class="kw">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="kw">&lt;td</span><span class="ot"> width=</span><span class="st">"50%"</span><span class="kw">&gt;</span>
<span class="kw">&lt;textarea</span><span class="ot"> id=</span><span class="st">"cssbox"</span><span class="ot"> style=</span><span class="st">"width:100%; height:100px;"</span> <span class="kw">&gt;</span>
<span class="co">&lt;!-- 預設貼入的CSS：開始 --&gt;</span>
td, th { padding:10px; }
th { background-color:black; color:white; }
table { border-collapse: collapse; border: 1px solid #373737; }
<span class="co">&lt;!---預設貼入的CSS：結束 --&gt;</span>
<span class="kw">&lt;/textarea&gt;</span>
<span class="kw">&lt;textarea</span><span class="ot"> id=</span><span class="st">"editbox"</span><span class="ot"> style=</span><span class="st">"width:100%; height:400px;"</span><span class="kw">&gt;</span>
<span class="co">&lt;!-- 預設貼入的HTML：開始 --&gt;</span>
Hello! <span class="kw">&lt;a</span><span class="ot"> href=</span><span class="st">"http://tw.yahoo.com"</span><span class="kw">&gt;</span>Yahoo<span class="kw">&lt;/a&gt;&lt;br/&gt;&lt;/br&gt;</span>
<span class="kw">&lt;table&gt;</span>
<span class="kw">&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;</span>欄 1<span class="kw">&lt;/th&gt;&lt;th&gt;</span>欄 2<span class="kw">&lt;/th&gt;&lt;/tr&gt;</span>
<span class="kw">&lt;tr&gt;&lt;th&gt;</span>列 1<span class="kw">&lt;/th&gt;&lt;td&gt;</span>1,1<span class="kw">&lt;/td&gt;&lt;td&gt;</span>1,2<span class="kw">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="kw">&lt;tr&gt;&lt;th&gt;</span>列 2<span class="kw">&lt;/th&gt;&lt;td&gt;</span>2,1<span class="kw">&lt;/td&gt;&lt;td&gt;</span>2,2<span class="kw">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="kw">&lt;/table&gt;&lt;br/&gt;</span>
<span class="kw">&lt;form</span><span class="ot"> action=</span><span class="st">"signup"</span><span class="ot"> method=</span><span class="st">"post"</span><span class="kw">&gt;</span>
帳號: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"text"</span><span class="ot"> name=</span><span class="st">"user"</span><span class="kw">/&gt;&lt;br/&gt;</span>
密碼: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"password"</span><span class="ot"> name=</span><span class="st">"password"</span><span class="kw">/&gt;&lt;br/&gt;</span>
信箱: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"email"</span><span class="ot"> name=</span><span class="st">"email"</span><span class="kw">/&gt;&lt;br/&gt;</span>
生日: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"date"</span><span class="ot"> name=</span><span class="st">"birthday"</span><span class="kw">/&gt;&lt;br/&gt;</span>
照片: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"file"</span><span class="ot"> name=</span><span class="st">"picture"</span><span class="kw">/&gt;&lt;br/&gt;</span>
性別: <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"radio"</span><span class="ot"> name=</span><span class="st">"sex"</span><span class="ot"> value=</span><span class="st">"male"</span><span class="ot"> checked</span><span class="kw">/&gt;</span> 男
      <span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"radio"</span><span class="ot"> name=</span><span class="st">"sex"</span><span class="ot"> value=</span><span class="st">"female"</span><span class="kw">/&gt;</span> 女<span class="kw">&lt;br/&gt;</span>
血型: <span class="kw">&lt;select</span><span class="ot"> name=</span><span class="st">"BloodType"</span><span class="kw">&gt;</span>
        <span class="kw">&lt;option</span><span class="ot"> value=</span><span class="st">"A"</span><span class="kw">&gt;</span>A 型<span class="kw">&lt;/option&gt;</span>
        <span class="kw">&lt;option</span><span class="ot"> value=</span><span class="st">"B"</span><span class="kw">&gt;</span>B 型<span class="kw">&lt;/option&gt;</span>
        <span class="kw">&lt;option</span><span class="ot"> value=</span><span class="st">"AB"</span><span class="kw">&gt;</span>AB 型<span class="kw">&lt;/option&gt;</span>
        <span class="kw">&lt;option</span><span class="ot"> value=</span><span class="st">"O"</span><span class="kw">&gt;</span>O 型<span class="kw">&lt;/option&gt;</span>
      <span class="kw">&lt;/select&gt;</span> <span class="kw">&lt;br/&gt;</span>
自我介紹： <span class="kw">&lt;br/&gt;</span>
<span class="kw">&lt;input</span><span class="ot"> type=</span><span class="st">"submit"</span><span class="ot"> value=</span><span class="st">"送出"</span><span class="kw">/&gt;&lt;input</span><span class="ot"> type=</span><span class="st">"reset"</span><span class="ot"> value=</span><span class="st">"清除"</span><span class="kw">/&gt;&lt;br/&gt;</span>
<span class="kw">&lt;/form&gt;</span>
<span class="co">&lt;!-- 預設貼入的HTML：結束 --&gt;</span>
<span class="kw">&lt;/textarea&gt;</span> 
<span class="kw">&lt;/td&gt;</span>
<span class="kw">&lt;td&gt;</span>
<span class="kw">&lt;div</span><span class="ot"> id=</span><span class="st">"showbox"</span><span class="ot"> style=</span><span class="st">"width:100%; height:500px;"</span><span class="kw">&gt;</span>
<span class="kw">&lt;/div&gt;</span>
<span class="kw">&lt;/td&gt;</span>
<span class="kw">&lt;/tr&gt;&lt;/table&gt;</span>
<span class="kw">&lt;/form&gt;</span>
<span class="kw">&lt;/body&gt;</span>
<span class="kw">&lt;/html&gt;</span></code></pre>
<h3 id="程式解析"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#程式解析">程式解析</a></h3>
<p>上述程式當中有三個主要的區塊，分別是：</p>
<ol style="list-style-type: decimal">
<li>CSS 填入區塊： <code>&lt;textarea id="cssbox" ...&lt;/textarea&gt;</code></li>
<li>HTML 填入區塊：<code>&lt;textarea id="editbox" ...&lt;/textarea&gt;</code></li>
<li>HTML 顯示區塊：<code>&lt;div id="showbox" ... &lt;/div&gt;</code></li>
</ol>
<p>此網頁的核心程式部分真的很簡單，只有如下短短的一小段：</p>
<ol style="list-style-type: decimal">
<li>利用 <code>var editbox = document.getElementById("editbox");</code> 取得 HTML 區塊內容</li>
<li>利用 <code>showbox.innerHTML = editbox.value;</code> 這個指令將該 HTML 原始碼填入 showbox 當中</li>
</ol>
<p>這樣就完成顯示 HTML 的動作了。</p>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="kw">function</span> <span class="fu">convert</span>() {
  <span class="kw">var</span> cssbox  = <span class="ot">document</span>.<span class="fu">getElementById</span>(<span class="st">"cssbox"</span>);
  <span class="kw">var</span> editbox = <span class="ot">document</span>.<span class="fu">getElementById</span>(<span class="st">"editbox"</span>);
  <span class="kw">var</span> showbox = <span class="ot">document</span>.<span class="fu">getElementById</span>(<span class="st">"showbox"</span>);
  <span class="kw">var</span> showboxstyle = <span class="ot">document</span>.<span class="fu">getElementById</span>(<span class="st">"showboxstyle"</span>);
  <span class="ot">showbox</span>.<span class="fu">innerHTML</span> = <span class="ot">editbox</span>.<span class="fu">value</span>;
  <span class="ot">showboxstyle</span>.<span class="fu">innerHTML</span> = <span class="ot">cssbox</span>.<span class="fu">value</span>;
}</code></pre>
<p>但是這樣作並沒有加入 cssbox 的內容到 HTML 當中，因此我們加入了下列原始碼：</p>
<ol style="list-style-type: decimal">
<li>在整個網頁的頭部事先用 <code>&lt;style id="showboxstyle"&gt;...&lt;/style&gt;</code> 這個標記加入一個 CSS style 顯示區塊</li>
<li>利用 <code>showboxstyle.innerHTML = cssbox.value</code> 這個指令將 cssbox 的內容填入到該表頭的 style 區塊中</li>
</ol>
<p>這樣就達成了套用 CSS 內容到網頁中的目的，完成了整個 HTML 編輯器的功能。</p>
<h3 id="結語-1"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#結語-1">結語</a></h3>
<p>在本文中，我們用非常簡單的程式，建構了一個 HTML 編輯器。事實上我們只不過是把網頁內容從編輯區域移動到顯示區域，然後流覽器就會 自動解釋這些內容進行呈現了。</p>
<p>在本系列的文章中，關於瀏覽器部分的 JavaScript 程式，我們將至此告一個段落，在下一期當中，我們將開始進入伺服端的 javascript 程式。 我們將利用 node.js 這個伺服端 JavaScript 執行平台，進一步探索 JavaScript 程式的奧秘，我們下期見！</p>
<h3 id="參考"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考">參考</a></h3>
<ul>
<li><a href="http://stackoverflow.com/questions/1720320/how-to-dynamically-create-css-class-in-javascript-and-apply">http://stackoverflow.com/questions/1720320/how-to-dynamically-create-css-class-in-javascript-and-apply</a></li>
<li><a href="http://dev.opera.com/articles/view/dynamic-style-css-javascript/">http://dev.opera.com/articles/view/dynamic-style-css-javascript/</a></li>
</ul>
<h2 id="r-統計軟體3-中央極限定理-作者陳鍾誠"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#r-統計軟體3-中央極限定理-作者陳鍾誠">R 統計軟體(3) – 中央極限定理 (作者：陳鍾誠)</a></h2>
<p>中央極限定理是機率統計上最重要的定理之一，整個統計的估計與檢定幾乎都建立在這個定理之上，因此 對「中央極限定理」有清楚的理解是學好機率統計的一個關鍵。</p>
<p>在本文中，我們將利用 R 軟體實作並驗證「中央極限定理」，讓讀者能透過程式實際體會該定理的重要性與用途。</p>
<h3 id="中央極限定理簡介"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#中央極限定理簡介">中央極限定理簡介</a></h3>
<p>中央極限定理的數學式：<img style="vertical-align:middle" src="./pmag201305_files/chart" alt="\frac{x_1+x_2+...+x_n}{n}  = \bar{x} \rightarrow N(\mu, \sigma/\sqrt{n})" title="\frac{x_1+x_2+...+x_n}{n}  = \bar{x} \rightarrow N(\mu, \sigma/\sqrt{n})"></p>
<p>如果用白話文陳述，那就是說 n 個樣本的平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(1)" alt="\bar{x}" title="\bar{x}"> 會趨近於常態分布。</p>
<p>更精確一點的說，當您從某個母體 X 取出 n 個樣本，則這 n 個樣本的平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(1)" alt="\bar{x}" title="\bar{x}"> 會趨近於以平均期望值 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 為中心， 以母體標準差 <img style="vertical-align:middle" src="./pmag201305_files/chart(3)" alt="\sigma" title="\sigma"> 除以 <img style="vertical-align:middle" src="./pmag201305_files/chart(4)" alt="\sqrt{n}" title="\sqrt{n}"> 的值 <img style="vertical-align:middle" src="./pmag201305_files/chart(5)" alt="\sigma/\sqrt{n}" title="\sigma/\sqrt{n}"> 為標準差的常態分布。</p>
<p>如果採用另一種正規化後的公式寫法，也可以將上述的「中央極限定理」改寫為：<img style="vertical-align:middle" src="./pmag201305_files/chart(6)" alt="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}} \rightarrow Z" title="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}} \rightarrow Z"></p>
<p>其中的 Z 是指標準常態分部，也就是 <img style="vertical-align:middle" src="./pmag201305_files/chart(7)" alt="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}}" title="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}}"> 會趨近標準常態分布。</p>
<h3 id="中央極限定理的用途"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#中央極限定理的用途">中央極限定理的用途</a></h3>
<p>根據上述的定義，我們知道當樣本數 n 足夠大時 (通常 20 個以上就夠大了)， n 個樣本的平均值 <img style="vertical-align:middle" src="./pmag201305_files/chart(8)" alt="\frac{x_1+x_2+...+x_n}{n}" title="\frac{x_1+x_2+...+x_n}{n}"><br>(也就是 <img style="vertical-align:middle" src="./pmag201305_files/chart(1)" alt="\bar{x}" title="\bar{x}">) 會趨近於常態分布，換句話說也就是 <img style="vertical-align:middle" src="./pmag201305_files/chart(7)" alt="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}}" title="\frac{\bar{x}-\mu}{\sigma/\sqrt{n}}"> 會趨近於標準常態分布。</p>
<p>因此、當我們取得一組樣本之後，我們就可以計算其平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(9)" alt="\frac{x_1+x_2+...+x_n}{n}=\bar{x}" title="\frac{x_1+x_2+...+x_n}{n}=\bar{x}"> ，如果有人告訴我們說母體的 平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 的值是多少，我們就可以看看 <img style="vertical-align:middle" src="./pmag201305_files/chart(1)" alt="\bar{x}" title="\bar{x}"> 與 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 是否差距很遠，如果差距很遠，導致 <img style="vertical-align:middle" src="./pmag201305_files/chart(1)" alt="\bar{x}" title="\bar{x}"> 來自平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 母體的機率很小，那麼很可能是此組樣本是非常罕見的特例，或者該組樣本的抽樣有所偏差，也就是該組樣本很可能並非來自平均數為 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 的母體。</p>
<p>以下是一些標準常態分布的重要數值，</p>
<ol style="list-style-type: decimal">
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(10)" alt="P[-\sigma &lt; X - \mu &lt; \sigma] = 0.68" title="P[-\sigma &lt; X - \mu &lt; \sigma] = 0.68"></li>
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(11)" alt="P[-2 \sigma &lt; X - \mu &lt; 2 \sigma] = 0.95" title="P[-2 \sigma &lt; X - \mu &lt; 2 \sigma] = 0.95"></li>
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(12)" alt="P[-3 \sigma &lt; X - \mu &lt; 3 \sigma] = 0.997" title="P[-3 \sigma &lt; X - \mu &lt; 3 \sigma] = 0.997"></li>
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(13)" alt="P[-4 \sigma &lt; X - \mu &lt; 4 \sigma] = 0.99993" title="P[-4 \sigma &lt; X - \mu &lt; 4 \sigma] = 0.99993"></li>
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(14)" alt="P[-5 \sigma &lt; X - \mu &lt; 5 \sigma] = 0.9999994" title="P[-5 \sigma &lt; X - \mu &lt; 5 \sigma] = 0.9999994"></li>
<li><img style="vertical-align:middle" src="./pmag201305_files/chart(15)" alt="P[-6 \sigma &lt; X - \mu &lt; 6 \sigma] = 0.999999998" title="P[-6 \sigma &lt; X - \mu &lt; 6 \sigma] = 0.999999998"></li>
</ol>
<pre class="sourceCode R"><code class="sourceCode r">&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">1</span>)-<span class="kw">pnorm</span>(-<span class="dv">1</span>)
[<span class="dv">1</span>] <span class="fl">0.6826895</span>
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">2</span>)-<span class="kw">pnorm</span>(-<span class="dv">2</span>)
[<span class="dv">1</span>] <span class="fl">0.9544997</span>
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">3</span>)-<span class="kw">pnorm</span>(-<span class="dv">3</span>)
[<span class="dv">1</span>] <span class="fl">0.9973002</span>
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">4</span>)-<span class="kw">pnorm</span>(-<span class="dv">4</span>)
[<span class="dv">1</span>] <span class="fl">0.9999367</span>
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">5</span>)-<span class="kw">pnorm</span>(-<span class="dv">5</span>)
[<span class="dv">1</span>] <span class="fl">0.9999994</span>
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">6</span>)-<span class="kw">pnorm</span>(-<span class="dv">6</span>)
[<span class="dv">1</span>] <span class="dv">1</span>
&gt;<span class="st"> </span><span class="kw">options</span>(<span class="dt">digits=</span><span class="dv">10</span>)
&gt;<span class="st"> </span><span class="kw">pnorm</span>(<span class="dv">6</span>)-<span class="kw">pnorm</span>(-<span class="dv">6</span>)
[<span class="dv">1</span>] <span class="fl">0.999999998</span></code></pre>
<p>從上面的數值您可以看出來，管理學上所謂的六標準差其實是很高的一個要求，也就是良率必須要達到 99.9999998% 以上才行。</p>
<p>如果您今天所取的 n 個樣本，與母體平均數 <img style="vertical-align:middle" src="./pmag201305_files/chart(2)" alt="\mu" title="\mu"> 距離兩個標準差以上，那就很可能有問題了，這種推論稱為檢定，我們可以用 R 軟體中的 t.test 函數來檢驗這件事，我們將在下一期當中說明如何用 R 軟體進行統計檢定的主題，讓我們先將焦點移回到中央極限定理身上，用 R 軟體 來驗證該定理。</p>
<h3 id="r-程式範例驗證中央極限定理"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#r-程式範例驗證中央極限定理">R 程式範例：驗證中央極限定理</a></h3>
<pre class="sourceCode R"><code class="sourceCode r">&gt;<span class="st"> </span>u &lt;-<span class="st"> </span><span class="kw">matrix</span> ( <span class="kw">runif</span>(<span class="dv">500000</span>), <span class="dv">50</span>, <span class="dv">10000</span> )
&gt;<span class="st"> </span>y &lt;-<span class="st"> </span><span class="kw">apply</span> ( u, <span class="dv">2</span>, mean )
&gt;<span class="st"> </span><span class="kw">hist</span>(u[,<span class="dv">1</span>])
&gt;<span class="st"> </span><span class="kw">hist</span>(y)
&gt;<span class="st"> </span>?apply
&gt;<span class="st"> </span></code></pre>
<p>說明：</p>
<ol style="list-style-type: decimal">
<li>u 乃是將 50 萬個 uniform 樣本分配成 50*10000 的矩陣，</li>
<li>y 對 u 進行列統計 apply ( u, 2, mean ) 代表對每行取平均值 mean(col of u) 的結果。</li>
<li>因此 y 代表從 Uniform Distribution 中每次取出 50 個樣本，然後進行加總平均 (x1+x2+...+x50)/50 的結果。</li>
<li>從下列的 hist(y) 圖形中，我們可以看到中央極限定理的證據：[[$ <em>i = mean(x</em>i[1,50])$ 會趨向常態分布。</li>
</ol>
<div class="figure">
<img src="./pmag201305_files/HistU.jpg" alt="圖、hist(u[,1]) 畫出的圖形"><p class="caption">圖、hist(u[,1]) 畫出的圖形</p>
</div>
<div class="figure">
<img src="./pmag201305_files/HistY.jpg" alt="圖、hist(y) 畫出的圖形"><p class="caption">圖、hist(y) 畫出的圖形</p>
</div>
<pre class="sourceCode R"><code class="sourceCode r">CLT =<span class="st"> </span>function(x) {
  op&lt;-<span class="kw">par</span>(<span class="dt">mfrow=</span><span class="kw">c</span>(<span class="dv">2</span>,<span class="dv">2</span>)) <span class="co"># 設為 2*2 的四格繪圖版</span>
  <span class="kw">hist</span>(x, <span class="dt">nclass=</span><span class="dv">50</span>)     <span class="co"># 繪製 x 序列的直方圖 (histogram)。</span>
  m2 &lt;-<span class="st"> </span><span class="kw">matrix</span>(x, <span class="dt">nrow=</span><span class="dv">2</span>, )  <span class="co"># 將 x 序列分為 2*k 兩個一組的矩陣 m2。</span>
  xbar2 &lt;-<span class="st"> </span><span class="kw">apply</span>(m2, <span class="dv">2</span>, mean)   <span class="co"># 取每兩個一組的平均值 (x1+x2)/2 放入 xbar2 中。</span>
  <span class="kw">hist</span>(xbar2, <span class="dt">nclass=</span><span class="dv">50</span>)     <span class="co"># 繪製 xbar2 序列的直方圖 (histogram)。</span>
  m10 &lt;-<span class="st"> </span><span class="kw">matrix</span>(x, <span class="dt">nrow=</span><span class="dv">10</span>, )   <span class="co"># 將 x 序列分為 10*k 兩個一組的矩陣 m10。</span>
  xbar10 &lt;-<span class="st"> </span><span class="kw">apply</span>(m10, <span class="dv">2</span>, mean) <span class="co"># 取每10個一組的平均值 (x1+..+x10)/10 放入 xbar10 中。</span>
  <span class="kw">hist</span>(xbar10, <span class="dt">nclass=</span><span class="dv">50</span>)    <span class="co"># 繪製 xbar10 序列的直方圖 (histogram)。</span>
  m20 &lt;-<span class="st"> </span><span class="kw">matrix</span>(x, <span class="dt">nrow=</span><span class="dv">20</span>, )   <span class="co"># 將 x 序列分為 25*k 兩個一組的矩陣 m25。</span>
  xbar20 &lt;-<span class="st"> </span><span class="kw">apply</span>(m20, <span class="dv">2</span>, mean) <span class="co"># 取每20個一組的平均值 (x1+..+x20)/20 放入 xbar20 中。</span>
  <span class="kw">hist</span>(xbar20, <span class="dt">nclass=</span><span class="dv">50</span>)    <span class="co"># 繪製 xbar20 序列的直方圖 (histogram)。</span>
}

<span class="kw">CLT</span>(<span class="kw">rbinom</span>(<span class="dv">100000</span>, <span class="dv">20</span>, <span class="fl">0.5</span>)) <span class="co"># 用參數為 n=20, p=0.5 的二項分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">runif</span>(<span class="dv">100000</span>)) <span class="co"># 用參數為 a=0, b=1 的均等分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">rpois</span>(<span class="dv">100000</span>, <span class="dv">4</span>)) <span class="co"># 用參數為 lambda=4 的布瓦松分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">rgeom</span>(<span class="dv">100000</span>, <span class="fl">0.5</span>)) <span class="co"># 用參數為 n=20, m=10, k=5 的超幾何分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">rhyper</span>(<span class="dv">100000</span>, <span class="dv">20</span>, <span class="dv">10</span>, <span class="dv">5</span>)) <span class="co"># 用參數為 p=0.5 的幾何分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">rnorm</span>(<span class="dv">100000</span>)) <span class="co"># 用參數為 mean=0, sd=1 的標準常態分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">sample</span>(<span class="dv">1</span>:<span class="dv">6</span>, <span class="dv">100000</span>, <span class="dt">replace=</span>T)) <span class="co"># 用擲骰子的分布驗證中央極限定理。</span>
<span class="kw">CLT</span>(<span class="kw">sample</span>(<span class="dv">0</span>:<span class="dv">1</span>, <span class="dv">100000</span>, <span class="dt">replace=</span>T)) <span class="co"># 用丟銅板的分布驗證中央極限定理。</span></code></pre>
<p>以下是這些指令的執行結果，從這些圖中您可以看到當樣本數到達 20 個的時候，幾乎每種樣本都會趨向常態分布。</p>
<div class="figure">
<img src="./pmag201305_files/CLT_rbinom.jpg" alt="圖、指令 CLT(rbinom(100000, 20, 0.5)) 的執行結果"><p class="caption">圖、指令 CLT(rbinom(100000, 20, 0.5)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_runif.jpg" alt="圖、指令 CLT(runif(100000)) 的執行結果"><p class="caption">圖、指令 CLT(runif(100000)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_rpois.jpg" alt="圖、指令 CLT(rpois(100000, 4)) 的執行結果"><p class="caption">圖、指令 CLT(rpois(100000, 4)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_rgeom.jpg" alt="圖、指令 CLT(rgeom(100000, 0.5)) 的執行結果"><p class="caption">圖、指令 CLT(rgeom(100000, 0.5)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_rhyper.jpg" alt="圖、指令 CLT(rhyper(100000, 20, 10, 5)) 的執行結果"><p class="caption">圖、指令 CLT(rhyper(100000, 20, 10, 5)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_rnorm.jpg" alt="圖、指令 CLT(rnorm(100000)) 的執行結果"><p class="caption">圖、指令 CLT(rnorm(100000)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_sample1_6.jpg" alt="圖、指令 CLT(sample(1:6, 100000, replace=T)) 的執行結果"><p class="caption">圖、指令 CLT(sample(1:6, 100000, replace=T)) 的執行結果</p>
</div>
<div class="figure">
<img src="./pmag201305_files/CLT_sample0_1.jpg" alt="圖、指令 CLT(sample(0:1, 100000, replace=T)) 的執行結果"><p class="caption">圖、指令 CLT(sample(0:1, 100000, replace=T)) 的執行結果</p>
</div>
<h3 id="參考文獻-5"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參考文獻-5">參考文獻</a></h3>
<ol style="list-style-type: decimal">
<li><a href="http://msenux.redwoods.edu/math/R/CentralLimit.php">The Central Limit Theorem (Part 1)</a></li>
<li><a href="http://episte.math.ntu.edu.tw/articles/mm/mm_09_3_07/index.html">洋洋 -- 淺談機率上的幾個極限定理</a></li>
<li>Proof of Central Limit Theorem, H. Krieger, Mathematics 157, Harvey Mudd College, Spring, 2005
<ul>
<li><a href="http://www.math.hmc.edu/~krieger/m157cltproof.pdf">http://www.math.hmc.edu/~krieger/m157cltproof.pdf</a></li>
</ul></li>
<li><a href="http://en.wikipedia.org/wiki/Central_limit_theorem">Central limit theorem:From Wikipedia, the free encyclopedia</a></li>
<li>Two Proofs of the Central Limit Theorem, Yuval Filmus, January/February 2010
<ul>
<li><a href="http://www.cs.toronto.edu/~yuvalf/CLT.pdf">http://www.cs.toronto.edu/~yuvalf/CLT.pdf</a></li>
</ul></li>
</ol>
<h2 id="opencv-1-c-語言影像辨識函式庫----簡介安裝與基本範例-作者da-wang"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#opencv-1-c-語言影像辨識函式庫----簡介安裝與基本範例-作者da-wang">OpenCV (1) – C 語言影像辨識函式庫 -- 簡介、安裝與基本範例 (作者：Da Wang)</a></h2>
<p>OpenCV 是 Intel 所釋出的一組影像辨識函式庫，功能相當強大，從本期開始， 我們將刊載由 Da Wang 一連串的 OpenCV 系列文章，讓讀者得以透過這些文章 進入影像辨識與處理的領域，這些文章的原文網誌位於以下網址：</p>
<ul>
<li><a href="http://yester-place.blogspot.tw/search/label/OpenCV">http://yester-place.blogspot.tw/search/label/OpenCV</a></li>
</ul>
<p>然而、網誌中的文章是 2008 年開始寫的，因此在使用的 OpenCV 版本上有些許落差， 為了彌補這樣的問題，編輯請 Da Wang 幫我們補充了最新的 OpenCV 2.44 版的程式示範，這個新版採用 cmake 建置軟體，可以編出 GNU make 專案或 Visual Studio 的專案，讓讀者能透過這樣的示範順利的執行 網誌中的這些程式。</p>
<h3 id="簡介"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#簡介">簡介</a></h3>
<p>OpenCV(Open Source Computer Vision) : 由Intel公司所開發出來的Open Source圖形演算法的函式庫(Image Process Libary)可以製做圖片，視訊，矩陣運算，統計，圖論，資料儲存的相關 C 語言程式設計，</p>
<p>相關的領域為:影像處理，電腦視覺，圖形識別，電腦圖學，資訊檢索或遊戲設計，比較有名的製作為物體追蹤，人臉辨識，傅立葉轉換，紋理分析， 可以整合不同圖檔格式的矩陣運算，應用在靜態圖片(BMP,JPG,TIF,PNG) ，動態Webcam的影像處理。</p>
<p>OpenCV 的組成為許多圖形處理的資料結構及演算法所疊合而成， 因此需要一些基本的資料結構基礎， 比如說 struct 怎麼使用， 如何 release 資料結構的空間等基本操作，會使用到 linked list 的算少數， 算是C語言中級程式設計， 有興趣玩的話，國內影像處理領域相關論文演算法幾乎都可以在OpenCV找的到，方便學術界用c語言推演更進階的影像處理演算法， 功能好比Matlab，但比Matlab快上許多倍，更可以整合c語言相關函式庫，做更多元強大的功能應用，然而它最大的門檻是比 Matlab 的進入障礙還高一些， 運用到許多資料結構，指標運算，記憶體位址，學完OpenCV，相信程式設計的功力更可以技高一籌。</p>
<p>OpenCV 提供了簡單的GUI介面， 他無法像 MicroSoft Visual C++ 的 MFC 及 Borland C++builder 的 VCL 那麼完整，但如果是對於學術領域的研究是夠用的，他也可以整合在Visual C++及C++ builder的環境上， 而本人是以Dev - C++為主， 屬於最基本簡單又不須付費的 Complier。</p>
<p>接下來進入 OpenCV 最基礎的入門， OpenCV 最常用的函式庫為 "cv.h"，"highgui.h"，"cxcore.h"及"cvaux.h.h"，"cv.h"代表Computer Vision， 電腦視覺函式庫， "highgui.h"， 當然就是GUI介面的函式庫啦， 當路徑都設定好之後(第一篇安裝方法)， 直接在開頭include進去就好啦，就跟stdio.h的使用方法一樣</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>
<span class="ot">#include &lt;cv.h&gt;</span>
<span class="ot">#include &lt;highgui.h&gt;</span>
<span class="ot">#include &lt;cxcore.h&gt;</span>
<span class="ot">#include &lt;cvaux.h&gt;</span></code></pre>
<h3 id="顯示靜態圖片"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#顯示靜態圖片">顯示靜態圖片</a></h3>
<p>接著，就介紹最基本的資料結構，IplImage，此資料結構是所有圖檔的一個中介，圖檔格式有很多種(bmp,jpg,png,tif)，此資料結構的內容既不是bmp，也不是jpg，而是一個藉由cvLoadImage()所轉換的自定義格式如下所示:</p>
<div class="figure">
<img src="./pmag201305_files/cvLoadImage.jpg">
</div>
<p>讀入圖片之後，要怎麼知道圖片真的讀入了呢，就利用"highgui.h"的功能來檢視看看吧。</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp">cvNamedWindow(<span class="st">"Show Image"</span>,<span class="dv">0</span>); 
cvResizeWindow(<span class="st">"Show Image"</span>,<span class="dv">300</span>,<span class="dv">400</span>); 
cvShowImage(<span class="st">"Show Image"</span>,Image1);</code></pre>
<p>要使用 OpenCV 的 GUI 時， 要先給視窗名稱命名， 這算是比較好寫的GUI之ㄧ了， 裡面"Show Image"就是這個視窗的名稱，cvResizeWindow()就是調整視窗大小，視窗大小被設定在300*400，並指定視窗的名稱，再來，就是顯示視窗的圖片cvShowImage()，並且給予IplImage資料結構的結構變數，Image1裡面必須要先用cvLoadImage()存入圖檔，接著，再用鍵盤事件cvWaitKey(0)來做阻斷，一張圖片就可以被開啟啦，這是OpenCV最基本的操作之ㄧ，也像是c語言的"hello world"的開始，恭喜跨入第一步。</p>
<p>當資料結構被創立之後，當然要做回收的動作啦，在這邊IplImage的資料結構被創立，視窗介面的資料結構也被創立，當執行完就要做回收的動作啦，所有的資料結構都會被malloc()的副程式配置空間，而cvLoadImage()只是把一連串的動作隱藏起來，cvLoadImage()不但做了配置IplImage的資料結構空間，也把所有副檔名格式的資料初始化，將所有的數值及一些簡單的分析都存在IplImage的資料結構內，方便做一些圖形演算法的運算，而視窗介面被cvNamedWindow()給創立，視窗的資料結構被隱含在cvNamedWindow()中，使用者只要使用"Show Image"等命名操控就可以使用GUI視窗的控制，這是一種分層抽象的概念，比較複雜的部份被程式碼包再它的下一層，因此，我只要操控該視窗的字串名稱("Show Image")就可以做任何想要的動作了。</p>
<p>這邊用cvDestroyWindow()及cvReleaseImage()回收給系統，回收的東西是記憶體，一般來說，不做記憶體回收也不會影響電腦的效能太大，作業系統也會自動的做垃圾收集，把一些沒意義的記憶體做刪除，因此程式碼不多這兩行也不會有太大的影響，不過這種東西畢竟是卡記憶體的，也不能確定它是不是永久卡位(電腦關機後一定消失)，因此，養成良好的習慣是程式設計師必備的，尤其是再做一個大的應用程式的時候。</p>
<p>簡單的OpenCV讀取圖形檔案程式碼</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;stdio.h&gt;</span>
<span class="ot">#include &lt;cv.h&gt;</span>
<span class="ot">#include &lt;highgui.h&gt; </span>

<span class="dt">int</span> main()
{
    <span class="dt">char</span> FileName[<span class="dv">10</span>]=<span class="st">"rain.jpg"</span>;

    IplImage *Image1 = cvLoadImage(FileName,<span class="dv">1</span>);

    cvNamedWindow(<span class="st">"Show Image"</span>,<span class="dv">0</span>);

    cvResizeWindow(<span class="st">"Show Image"</span>,<span class="dv">300</span>,<span class="dv">400</span>);

    cvShowImage(<span class="st">"Show Image"</span>,Image1);

    cvWaitKey(<span class="dv">0</span>); 

    cvDestroyWindow(<span class="st">"Show Image"</span>);

    cvReleaseImage(&amp;Image1);
}</code></pre>
<p>圖片:</p>
<div class="figure">
<img src="./pmag201305_files/cvImageRain.jpg">
</div>
<p>執行結果:</p>
<div class="figure">
<img src="./pmag201305_files/cvShowImageRain.jpg">
</div>
<h3 id="使用-webcam-抓取動態影片"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#使用-webcam-抓取動態影片">使用 WebCam 抓取動態影片</a></h3>
<p>視訊的使用也是OpenCV的基本功能之一，它可以做連續性的影像處理，比capCreateCaptureWindow()這個函式好用多了， capCreateCaptureWindow()在"vfw.h"裡，只能在MicroSoft的Visual C++及 Borland C++ builder 使用， Dev-C++4.9.9.2 不提供此函式， 當然啦， OpenCV對於視訊的處理提供了比capCreateCaptureWindow()更強大的功能。</p>
<p>程式碼部份</p>
<pre class="sourceCode CPP"><code class="sourceCode cpp"><span class="ot">#include &lt;cv.h&gt;</span>
<span class="ot">#include &lt;highgui.h&gt;</span>
<span class="ot">#include &lt;stdio.h&gt;</span>

<span class="dt">int</span> main()
{
    CvCapture *capture;
    IplImage *frame;
    capture =cvCaptureFromCAM(<span class="dv">0</span>) ;
    cvNamedWindow(<span class="st">"Webcam"</span>，<span class="dv">0</span>);
    <span class="kw">while</span>(<span class="kw">true</span>)
    {
        frame = cvQueryFrame(capture);
        cvShowImage(<span class="st">"Webcam"</span>,frame);
        <span class="kw">if</span>(cvWaitKey(<span class="dv">10</span>)&gt;=<span class="dv">0</span>)
        {
              <span class="kw">break</span>;
        }
    }
    cvReleaseCapture(&amp;capture);
    cvDestroyWindow(<span class="st">"Webcam"</span>);
}</code></pre>
<p>裡面使用到CvCapture及IplImage兩個資料結構，CvCapture是一個Interface的資料結構，為一個資料結構的雛形，無任何的變數型別存在，由cvCaptureFromCAM(0)來選定Webcam裝置，cvCaptureFromCAM(0)的0代表自動偵測視訊裝置，如果有兩台以上的Webcam則就用連續兩個cvCaptureFromCAM(0)函式來擷取，接著，就用while(true)的無窮回圈來捕捉連續影像的圖形畫面，cvQueryFrame()則用來擷取每秒顯示出來的frame這裡由cvWaitKey(10)來控制擷取時間，每延遲10毫秒捕捉一次視訊畫面，cvWaitKey()為鍵盤事件，每超過10毫秒則會回傳-1，因此，畫面會因cvWaitKey(10)而延遲10毫秒，接著由無窮回圈來繼續播放，當鍵盤事件發生的時候則會跳出whlie的無窮回圈，接著就把CvCapture資料結構及視窗介面資料結構做記憶體的釋放。</p>
<p>執行結果:</p>
<div class="figure">
<img src="./pmag201305_files/cvCamCapture.jpg">
</div>
<h3 id="opencv-2.44-版的安裝與使用-搭配-cmake-與-visual-studio"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#opencv-2.44-版的安裝與使用-搭配-cmake-與-visual-studio">OpenCV 2.44 版的安裝與使用 (搭配 CMake 與 Visual Studio)</a></h3>
<h4 id="下載並安裝-cmake-opencv"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#下載並安裝-cmake-opencv">下載並安裝 CMake , OpenCV</a></h4>
<p>下載 CMAKE : <a href="http://www.cmake.org/">http://www.cmake.org/</a></p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_download.png">
</div>
<p>下載 OpenCV：<a href="http://opencv.org/downloads.html">http://opencv.org/downloads.html</a></p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_download2.png">
</div>
<p>開啟檔案選擇 <code>c:\</code></p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_extract1.png">
</div>
<p>安裝 CMAKE</p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_extract2.png">
</div>
<h4 id="透過-cmake-建置-opencv-專案"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#透過-cmake-建置-opencv-專案">透過 CMAKE 建置 OpenCV 專案</a></h4>
<p>開啟CMAKE選擇路徑 <code>c:\opencv</code>，點選 configure</p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_extract3.png">
</div>
<p>選擇編譯器種類</p>
<div class="figure">
<img src="./pmag201305_files/cv244_cmake_extract4.png">
</div>
<p>如何看編譯器呢? 方法是從Visual Studio menu 上面點選說明 (我的 Visual Studio 2012 為 Visual Studio 11)</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio1.png">
</div>
<p>勾選Build Example，並按下Generate</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio2.png">
</div>
<p>Visual Studio 2012 的專案 sln 檔將會自動產生</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio3.png">
</div>
<p>開啟後，選取「Debug Mode 建製方案」或「Release Mode建製方案」</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio4.png">
</div>
<p>設定動態鏈結函式庫路徑(DLL檔) (位於「控制台-&gt;進階-&gt;環境變數」)</p>
<p><img src="./pmag201305_files/cv244_VisualStudio5_path1.png"> <img src="./pmag201305_files/cv244_VisualStudio6_path2.png"></p>
<h4 id="opencv-的-vs-2012-vusual-c-環境設立"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#opencv-的-vs-2012-vusual-c-環境設立">OpenCV 的 VS 2012 Vusual C++ 環境設立</a></h4>
<p>開啟一個空專案test，一個source.cpp檔，選取屬性管理員</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio7.png">
</div>
<p>選取 Microsofr.Cpp.Win32.user 設定</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio8.png">
</div>
<p>設定 VC++ 目錄的</p>
<ol style="list-style-type: decimal">
<li>Include目錄</li>
<li>程式目錄</li>
</ol>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio9.png">
</div>
<p>加入以下項目</p>
<p><code>C:\opencv\build\include</code></p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio10.png">
</div>
<p><code>C:\opencv\lib\Release</code></p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio11.png">
</div>
<p>點選連結器-&gt;輸入</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio12.png">
</div>
<p>加入以下項目</p>
<pre><code>opencv_core244.lib
opencv_calib3d244.lib
opencv_contrib244.lib
opencv_features2d244.lib
opencv_highgui244.lib
opencv_imgproc244.lib</code></pre>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio13.png">
</div>
<p>建置方案</p>
<div class="figure">
<img src="./pmag201305_files/cv244_VisualStudio14.png">
</div>
<h3 id="原文連結"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#原文連結">原文連結</a></h3>
<ul>
<li><a href="http://yester-place.blogspot.tw/search/label/OpenCV%E4%BB%8B%E7%B4%B9">OpenCV程式設計介紹(1)</a></li>
<li><a href="http://yester-place.blogspot.tw/2008/06/opencv2.html">OpenCV程式設計介紹(2)</a></li>
<li><a href="https://www.dropbox.com/s/es8lkwtlhcp1opx/opencv%20install.doc">OpenCV 2.44 安裝與使用:採用 cmake 與 Visual Studio (doc)</a></li>
</ul>
<p>【本文原始作者為 Da Wang, 由陳鍾誠編輯加註後納入雜誌】</p>
<h1 id="雜誌訊息"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#雜誌訊息">雜誌訊息</a></h1>
<h2 id="讀者訂閱"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#讀者訂閱">讀者訂閱</a></h2>
<p>程式人雜誌是一個結合「開放原始碼與公益捐款活動」的雜誌，簡稱「開放公益雜誌」。開放公益雜誌本著「讀書做善事、寫書做公益」的精神，我們非常歡迎程式人認養專欄、或者捐出您的網誌，如果您願意成為本雜誌的專欄作家，請加入 <a href="https://www.facebook.com/groups/programmerMagazine/">程式人雜誌社團</a> 一同共襄盛舉。</p>
<p>我們透過發行這本雜誌，希望讓大家可以讀到想讀的書，學到想學的技術，同時也讓寫作的朋友的作品能產生良好價值 – 那就是讓讀者根據雜誌的價值捐款給慈善團體。 讀雜誌做公益也不需要有壓力，您不需要每讀一本就急著去捐款，您可以讀了十本再捐，或者使用固定的月捐款方式，當成是雜誌訂閱費，或者是季捐款、一年捐一次等都 OK ! 甚至是單純當個讀者我們也都很歡迎！ 本雜誌每期參考價：NT 50 元，如果您喜歡本雜誌，請將書款捐贈公益團體。例如可捐贈給「羅慧夫顱顏基金會 彰化銀行(009) 帳號：5234-01-41778-800」。(若匯款要加註可用「程式人雜誌」五個字)</p>
<p>想訂閱本雜誌的讀者，請按 <a href="https://docs.google.com/spreadsheet/viewform?fromEmail=true&formkey=dG1TcER6Q3h1ZkpacFpDeEVFTDBLeVE6MQ">雜誌訂閱</a> 連結並填寫表單，我們會在每一期雜誌出刊時寄送通知與下載網址到您的信箱。</p>
<h2 id="投稿須知"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#投稿須知">投稿須知</a></h2>
<p><em>給專欄寫作者：</em> 做公益不需要有壓力。如果您願意撰寫專欄，您可以輕鬆的寫，如果當月的稿件出不來，我們會安排其他稿件上場。</p>
<p><em>給網誌捐贈者：</em> 如果您沒時間寫專欄或投稿，沒關係，只要將您的網誌以 [創作共用的「姓名標示、非商業性、相同方式分享」授權] 並通知我們，我們會自動從中選取需要的文章進行編輯，放入適當的雜誌當中出刊。</p>
<p><em>給文章投稿者：</em> 程式人雜誌非常歡迎您加入作者的行列，如果您想撰寫任何文章或投稿，請用 markdown 或 LibreOffice 編輯好您的稿件，並於每個月 25 日前投稿到<a href="https://www.facebook.com/groups/programmerMagazine/">程式人雜誌社團</a> 的檔案區，我們會盡可能將稿件編入隔月1號出版程式人雜誌當中，也歡迎您到社團中與我們一同討論。</p>
<p>如果您要投稿給程式人雜誌，我們最希望的格式是採用 markdown 的格式撰寫，然後將所有檔按壓縮為 zip 上傳到社團檔案區給我們， 如您想學習 markdown 的撰寫出版方式，可以參考 [程式人雜誌的出版方法] 一文。</p>
<p>如果您無法採用 markdown 的方式撰寫，也可以直接給我們您的稿件，像是 MS. Word 的 doc 檔或 LibreOffice 的 odt 檔都可以，我們 會將這些稿件改寫為 markdown 之後編入雜誌當中。</p>
<h2 id="參與編輯"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#參與編輯">參與編輯</a></h2>
<p>您也可以擔任程式人雜誌的編輯，甚至創造一個全新的公益雜誌，我們誠摯的邀請您加入「開放公益出版」的行列，如果您想擔任編輯或創造新雜誌，也歡迎到 <a href="https://www.facebook.com/groups/programmerMagazine/">程式人雜誌社團</a> 來與我們討論相關事宜。</p>
<h2 id="公益資訊"><a href="https://dl.dropboxusercontent.com/u/101584453/pmag/201305/book/pmag.html#公益資訊">公益資訊</a></h2>
<table>
<colgroup><col width="22%">
<col width="20%">
<col width="28%">
<col width="28%">
</colgroup><thead>
<tr class="header">
<th align="left">公益團體</th>
<th align="left">聯絡資訊</th>
<th align="left">服務對象</th>
<th align="left">捐款帳號</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">財團法人羅慧夫顱顏基金會</td>
<td align="left"><a href="http://www.nncf.org/">http://www.nncf.org/</a> <br> <script type="text/javascript">
<!--
h='&#110;&#110;&#x63;&#102;&#46;&#x6f;&#114;&#x67;';a='&#64;';n='&#108;&#x79;&#110;&#110;';e=n+a+h;
document.write('<a h'+'ref'+'="ma'+'ilto'+':'+e+'">'+e+'<\/'+'a'+'>');
// -->
</script><a href="mailto:lynn@nncf.org">lynn@nncf.org</a><noscript>&amp;#108;&amp;#x79;&amp;#110;&amp;#110;&amp;#32;&amp;#x61;&amp;#116;&amp;#32;&amp;#110;&amp;#110;&amp;#x63;&amp;#102;&amp;#32;&amp;#100;&amp;#x6f;&amp;#116;&amp;#32;&amp;#x6f;&amp;#114;&amp;#x67;</noscript> <br> 02-27190408分機 232</td>
<td align="left">顱顏患者 (如唇顎裂、小耳症或其他罕見顱顏缺陷）</td>
<td align="left">銀行：009彰化銀行民生分行<br> 帳號：5234-01-41778-800</td>
</tr>
<tr class="even">
<td align="left">社團法人台灣省兒童少年成長協會</td>
<td align="left"><a href="http://www.cyga.org/">http://www.cyga.org/</a> <br> <script type="text/javascript">
<!--
h='&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;';a='&#64;';n='&#x63;&#x79;&#x67;&#x61;&#x39;&#x39;';e=n+a+h;
document.write('<a h'+'ref'+'="ma'+'ilto'+':'+e+'">'+e+'<\/'+'a'+'>');
// -->
</script><a href="mailto:cyga99@gmail.com">cyga99@gmail.com</a><noscript>&amp;#x63;&amp;#x79;&amp;#x67;&amp;#x61;&amp;#x39;&amp;#x39;&amp;#32;&amp;#x61;&amp;#116;&amp;#32;&amp;#x67;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#32;&amp;#100;&amp;#x6f;&amp;#116;&amp;#32;&amp;#x63;&amp;#x6f;&amp;#x6d;</noscript> <br> 04-23058005</td>
<td align="left">單親、隔代教養.弱勢及一般家庭之兒童青少年</td>
<td align="left">銀行：新光銀行 <br> 戶名：台灣省兒童少年成長協會 <br> 帳號：103-0912-10-000212-0</td>
</tr>
</tbody>
</table>
</div>
<div id="footer">
<a href="https://www.facebook.com/groups/programmerMagazine/">程式人雜誌</a> ，採用 <a href="http://creativecommons.org/licenses/by-sa/3.0/tw/">創作共用：姓名標示、相同方式分享</a> 授權，歡迎加入 <a href="https://www.facebook.com/groups/programmerMagazine/">雜誌社團</a>
</div>


<div class="diigolet notice" id="diigolet-notice" style="display: none;"><div><b>&nbsp;</b><p>Ok, done!</p><span id="close"></span></div></div><div id="diigolet-csm2" style="position: absolute; display: none;"><a id="diigolet-csm-highlight2" href="javascript:void(0);"></a><a id="diigolet-csm-search2" href="javascript:void(0);"></a><div id="diigolet-csm-color" style="height: 0px; overflow: hidden;"><a class="diigolet-csm-coloritem" id="diigolet-csm-yellow" style="height: 0px; overflow: hidden;"></a><a class="diigolet-csm-coloritem" id="diigolet-csm-blue" style="height: 0px; overflow: hidden;"></a><a class="diigolet-csm-coloritem" id="diigolet-csm-green" style="height: 0px; overflow: hidden;"></a><a class="diigolet-csm-coloritem" id="diigolet-csm-pink" style="height: 0px; overflow: hidden;"></a></div></div></body></html>